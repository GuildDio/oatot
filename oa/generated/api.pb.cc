// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace oatot {
class SiteAuthDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteAuth> {
} _SiteAuth_default_instance_;
class OaAuthDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaAuth> {
} _OaAuth_default_instance_;
class SiteLoginStep1RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteLoginStep1Request> {
} _SiteLoginStep1Request_default_instance_;
class SiteLoginStep1ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteLoginStep1Response> {
} _SiteLoginStep1Response_default_instance_;
class SiteLoginStep2RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteLoginStep2Request> {
} _SiteLoginStep2Request_default_instance_;
class SiteLoginStep2ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteLoginStep2Response> {
} _SiteLoginStep2Response_default_instance_;
class SiteLogoutRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteLogoutRequest> {
} _SiteLogoutRequest_default_instance_;
class SiteLogoutResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteLogoutResponse> {
} _SiteLogoutResponse_default_instance_;
class OaLoginStep1RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaLoginStep1Request> {
} _OaLoginStep1Request_default_instance_;
class OaLoginStep1ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaLoginStep1Response> {
} _OaLoginStep1Response_default_instance_;
class SiteOaLoginStep2RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteOaLoginStep2Request> {
} _SiteOaLoginStep2Request_default_instance_;
class SiteOaLoginStep2ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteOaLoginStep2Response> {
} _SiteOaLoginStep2Response_default_instance_;
class SiteMyQkeysRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteMyQkeysRequest> {
} _SiteMyQkeysRequest_default_instance_;
class QkeyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Qkey> {
} _Qkey_default_instance_;
class SiteMyQkeysResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteMyQkeysResponse> {
} _SiteMyQkeysResponse_default_instance_;
class SiteRemoveQkeyRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteRemoveQkeyRequest> {
} _SiteRemoveQkeyRequest_default_instance_;
class SiteRemoveQkeyResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteRemoveQkeyResponse> {
} _SiteRemoveQkeyResponse_default_instance_;
class SiteDepositBtcRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteDepositBtcRequest> {
} _SiteDepositBtcRequest_default_instance_;
class SiteDepositBtcResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteDepositBtcResponse> {
} _SiteDepositBtcResponse_default_instance_;
class SiteWithdrawBtcRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteWithdrawBtcRequest> {
} _SiteWithdrawBtcRequest_default_instance_;
class SiteWithdrawBtcResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SiteWithdrawBtcResponse> {
} _SiteWithdrawBtcResponse_default_instance_;
class OaBalanceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaBalanceRequest> {
} _OaBalanceRequest_default_instance_;
class OaBalanceResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaBalanceResponse> {
} _OaBalanceResponse_default_instance_;
class BidDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Bid> {
} _Bid_default_instance_;
class OaBidRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaBidRequest> {
} _OaBidRequest_default_instance_;
class OaBidResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaBidResponse> {
} _OaBidResponse_default_instance_;
class OaMyActiveBidsRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaMyActiveBidsRequest> {
} _OaMyActiveBidsRequest_default_instance_;
class OaMyActiveBidsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaMyActiveBidsResponse> {
} _OaMyActiveBidsResponse_default_instance_;
class OaActiveBidsSummaryRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaActiveBidsSummaryRequest> {
} _OaActiveBidsSummaryRequest_default_instance_;
class OaActiveBidsSummaryResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaActiveBidsSummaryResponse> {
} _OaActiveBidsSummaryResponse_default_instance_;
class OaMyPastBidsRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaMyPastBidsRequest> {
} _OaMyPastBidsRequest_default_instance_;
class OaMyPastBidsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OaMyPastBidsResponse> {
} _OaMyPastBidsResponse_default_instance_;
class UpdatesRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdatesRequest> {
  public:
  const ::oatot::OaAuth* oa_auth_;
  const ::oatot::SiteAuth* site_auth_;
} _UpdatesRequest_default_instance_;
class BidClosedEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BidClosedEvent> {
} _BidClosedEvent_default_instance_;
class SummaryEventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SummaryEvent> {
} _SummaryEvent_default_instance_;
class EventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Event> {
  public:
  const ::oatot::BidClosedEvent* bid_closed_event_;
  const ::oatot::SummaryEvent* summary_event_;
} _Event_default_instance_;
class UpdatesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdatesResponse> {
} _UpdatesResponse_default_instance_;

namespace protobuf_api_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[37];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteAuth, btc_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteAuth, session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaAuth, qkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep1Request, btc_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep1Response, challenge_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep2Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep2Request, btc_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep2Request, challenge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep2Request, signed_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep2Request, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep2Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLoginStep2Response, session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLogoutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLogoutRequest, site_auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteLogoutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaLoginStep1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaLoginStep1Request, qkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaLoginStep1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaLoginStep1Response, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteOaLoginStep2Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteOaLoginStep2Request, site_auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteOaLoginStep2Request, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteOaLoginStep2Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteMyQkeysRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteMyQkeysRequest, site_auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Qkey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Qkey, qkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Qkey, added_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Qkey, last_used_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteMyQkeysResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteMyQkeysResponse, qkeys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteRemoveQkeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteRemoveQkeyRequest, site_auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteRemoveQkeyRequest, qkey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteRemoveQkeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteDepositBtcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteDepositBtcRequest, site_auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteDepositBtcResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteDepositBtcResponse, btc_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteWithdrawBtcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteWithdrawBtcRequest, site_auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteWithdrawBtcRequest, btc_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteWithdrawBtcRequest, satoshis_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteWithdrawBtcResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SiteWithdrawBtcResponse, tx_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaBalanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaBalanceRequest, oa_auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaBalanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaBalanceResponse, free_satoshis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaBalanceResponse, satoshis_on_bids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bid, horse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bid, satoshis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bid, open_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bid, close_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bid, winner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bid, prize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaBidRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaBidRequest, oa_auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaBidRequest, bid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaBidResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaMyActiveBidsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaMyActiveBidsRequest, oa_auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaMyActiveBidsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaMyActiveBidsResponse, bids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaActiveBidsSummaryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaActiveBidsSummaryRequest, oa_auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaActiveBidsSummaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaActiveBidsSummaryResponse, bids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaMyPastBidsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaMyPastBidsRequest, oa_auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaMyPastBidsRequest, next_page_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaMyPastBidsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaMyPastBidsResponse, bids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OaMyPastBidsResponse, next_page_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatesRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_UpdatesRequest_default_instance_), oa_auth_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_UpdatesRequest_default_instance_), site_auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatesRequest, next_page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatesRequest, auth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidClosedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidClosedEvent, bid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SummaryEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SummaryEvent, new_summary_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Event_default_instance_), bid_closed_event_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Event_default_instance_), summary_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatesResponse, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatesResponse, next_page_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SiteAuth)},
  { 7, -1, sizeof(OaAuth)},
  { 13, -1, sizeof(SiteLoginStep1Request)},
  { 19, -1, sizeof(SiteLoginStep1Response)},
  { 25, -1, sizeof(SiteLoginStep2Request)},
  { 34, -1, sizeof(SiteLoginStep2Response)},
  { 40, -1, sizeof(SiteLogoutRequest)},
  { 46, -1, sizeof(SiteLogoutResponse)},
  { 51, -1, sizeof(OaLoginStep1Request)},
  { 57, -1, sizeof(OaLoginStep1Response)},
  { 63, -1, sizeof(SiteOaLoginStep2Request)},
  { 70, -1, sizeof(SiteOaLoginStep2Response)},
  { 75, -1, sizeof(SiteMyQkeysRequest)},
  { 81, -1, sizeof(Qkey)},
  { 89, -1, sizeof(SiteMyQkeysResponse)},
  { 95, -1, sizeof(SiteRemoveQkeyRequest)},
  { 102, -1, sizeof(SiteRemoveQkeyResponse)},
  { 107, -1, sizeof(SiteDepositBtcRequest)},
  { 113, -1, sizeof(SiteDepositBtcResponse)},
  { 119, -1, sizeof(SiteWithdrawBtcRequest)},
  { 127, -1, sizeof(SiteWithdrawBtcResponse)},
  { 133, -1, sizeof(OaBalanceRequest)},
  { 139, -1, sizeof(OaBalanceResponse)},
  { 146, -1, sizeof(Bid)},
  { 157, -1, sizeof(OaBidRequest)},
  { 164, -1, sizeof(OaBidResponse)},
  { 169, -1, sizeof(OaMyActiveBidsRequest)},
  { 175, -1, sizeof(OaMyActiveBidsResponse)},
  { 181, -1, sizeof(OaActiveBidsSummaryRequest)},
  { 187, -1, sizeof(OaActiveBidsSummaryResponse)},
  { 193, -1, sizeof(OaMyPastBidsRequest)},
  { 200, -1, sizeof(OaMyPastBidsResponse)},
  { 207, -1, sizeof(UpdatesRequest)},
  { 216, -1, sizeof(BidClosedEvent)},
  { 222, -1, sizeof(SummaryEvent)},
  { 228, -1, sizeof(Event)},
  { 236, -1, sizeof(UpdatesResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteLoginStep1Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteLoginStep1Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteLoginStep2Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteLoginStep2Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteLogoutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteLogoutResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaLoginStep1Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaLoginStep1Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteOaLoginStep2Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteOaLoginStep2Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteMyQkeysRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Qkey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteMyQkeysResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteRemoveQkeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteRemoveQkeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteDepositBtcRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteDepositBtcResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteWithdrawBtcRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SiteWithdrawBtcResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaBalanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaBalanceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaBidRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaBidResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaMyActiveBidsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaMyActiveBidsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaActiveBidsSummaryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaActiveBidsSummaryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaMyPastBidsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OaMyPastBidsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BidClosedEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SummaryEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatesResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 37);
}

}  // namespace

void TableStruct::Shutdown() {
  _SiteAuth_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _OaAuth_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SiteLoginStep1Request_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SiteLoginStep1Response_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SiteLoginStep2Request_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _SiteLoginStep2Response_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _SiteLogoutRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _SiteLogoutResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _OaLoginStep1Request_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _OaLoginStep1Response_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _SiteOaLoginStep2Request_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _SiteOaLoginStep2Response_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _SiteMyQkeysRequest_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _Qkey_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _SiteMyQkeysResponse_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _SiteRemoveQkeyRequest_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _SiteRemoveQkeyResponse_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _SiteDepositBtcRequest_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _SiteDepositBtcResponse_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _SiteWithdrawBtcRequest_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _SiteWithdrawBtcResponse_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _OaBalanceRequest_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _OaBalanceResponse_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _Bid_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _OaBidRequest_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _OaBidResponse_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _OaMyActiveBidsRequest_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _OaMyActiveBidsResponse_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _OaActiveBidsSummaryRequest_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _OaActiveBidsSummaryResponse_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _OaMyPastBidsRequest_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _OaMyPastBidsResponse_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _UpdatesRequest_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _BidClosedEvent_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _SummaryEvent_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _Event_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _UpdatesResponse_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  _SiteAuth_default_instance_.DefaultConstruct();
  _OaAuth_default_instance_.DefaultConstruct();
  _SiteLoginStep1Request_default_instance_.DefaultConstruct();
  _SiteLoginStep1Response_default_instance_.DefaultConstruct();
  _SiteLoginStep2Request_default_instance_.DefaultConstruct();
  _SiteLoginStep2Response_default_instance_.DefaultConstruct();
  _SiteLogoutRequest_default_instance_.DefaultConstruct();
  _SiteLogoutResponse_default_instance_.DefaultConstruct();
  _OaLoginStep1Request_default_instance_.DefaultConstruct();
  _OaLoginStep1Response_default_instance_.DefaultConstruct();
  _SiteOaLoginStep2Request_default_instance_.DefaultConstruct();
  _SiteOaLoginStep2Response_default_instance_.DefaultConstruct();
  _SiteMyQkeysRequest_default_instance_.DefaultConstruct();
  _Qkey_default_instance_.DefaultConstruct();
  _SiteMyQkeysResponse_default_instance_.DefaultConstruct();
  _SiteRemoveQkeyRequest_default_instance_.DefaultConstruct();
  _SiteRemoveQkeyResponse_default_instance_.DefaultConstruct();
  _SiteDepositBtcRequest_default_instance_.DefaultConstruct();
  _SiteDepositBtcResponse_default_instance_.DefaultConstruct();
  _SiteWithdrawBtcRequest_default_instance_.DefaultConstruct();
  _SiteWithdrawBtcResponse_default_instance_.DefaultConstruct();
  _OaBalanceRequest_default_instance_.DefaultConstruct();
  _OaBalanceResponse_default_instance_.DefaultConstruct();
  _Bid_default_instance_.DefaultConstruct();
  _OaBidRequest_default_instance_.DefaultConstruct();
  _OaBidResponse_default_instance_.DefaultConstruct();
  _OaMyActiveBidsRequest_default_instance_.DefaultConstruct();
  _OaMyActiveBidsResponse_default_instance_.DefaultConstruct();
  _OaActiveBidsSummaryRequest_default_instance_.DefaultConstruct();
  _OaActiveBidsSummaryResponse_default_instance_.DefaultConstruct();
  _OaMyPastBidsRequest_default_instance_.DefaultConstruct();
  _OaMyPastBidsResponse_default_instance_.DefaultConstruct();
  _UpdatesRequest_default_instance_.DefaultConstruct();
  _BidClosedEvent_default_instance_.DefaultConstruct();
  _SummaryEvent_default_instance_.DefaultConstruct();
  _Event_default_instance_.DefaultConstruct();
  _UpdatesResponse_default_instance_.DefaultConstruct();
  _SiteLogoutRequest_default_instance_.get_mutable()->site_auth_ = const_cast< ::oatot::SiteAuth*>(
      ::oatot::SiteAuth::internal_default_instance());
  _SiteOaLoginStep2Request_default_instance_.get_mutable()->site_auth_ = const_cast< ::oatot::SiteAuth*>(
      ::oatot::SiteAuth::internal_default_instance());
  _SiteMyQkeysRequest_default_instance_.get_mutable()->site_auth_ = const_cast< ::oatot::SiteAuth*>(
      ::oatot::SiteAuth::internal_default_instance());
  _Qkey_default_instance_.get_mutable()->added_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _Qkey_default_instance_.get_mutable()->last_used_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _SiteRemoveQkeyRequest_default_instance_.get_mutable()->site_auth_ = const_cast< ::oatot::SiteAuth*>(
      ::oatot::SiteAuth::internal_default_instance());
  _SiteDepositBtcRequest_default_instance_.get_mutable()->site_auth_ = const_cast< ::oatot::SiteAuth*>(
      ::oatot::SiteAuth::internal_default_instance());
  _SiteWithdrawBtcRequest_default_instance_.get_mutable()->site_auth_ = const_cast< ::oatot::SiteAuth*>(
      ::oatot::SiteAuth::internal_default_instance());
  _OaBalanceRequest_default_instance_.get_mutable()->oa_auth_ = const_cast< ::oatot::OaAuth*>(
      ::oatot::OaAuth::internal_default_instance());
  _Bid_default_instance_.get_mutable()->open_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _Bid_default_instance_.get_mutable()->close_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _OaBidRequest_default_instance_.get_mutable()->oa_auth_ = const_cast< ::oatot::OaAuth*>(
      ::oatot::OaAuth::internal_default_instance());
  _OaBidRequest_default_instance_.get_mutable()->bid_ = const_cast< ::oatot::Bid*>(
      ::oatot::Bid::internal_default_instance());
  _OaMyActiveBidsRequest_default_instance_.get_mutable()->oa_auth_ = const_cast< ::oatot::OaAuth*>(
      ::oatot::OaAuth::internal_default_instance());
  _OaActiveBidsSummaryRequest_default_instance_.get_mutable()->oa_auth_ = const_cast< ::oatot::OaAuth*>(
      ::oatot::OaAuth::internal_default_instance());
  _OaMyPastBidsRequest_default_instance_.get_mutable()->oa_auth_ = const_cast< ::oatot::OaAuth*>(
      ::oatot::OaAuth::internal_default_instance());
  _UpdatesRequest_default_instance_.oa_auth_ = const_cast< ::oatot::OaAuth*>(
      ::oatot::OaAuth::internal_default_instance());
  _UpdatesRequest_default_instance_.site_auth_ = const_cast< ::oatot::SiteAuth*>(
      ::oatot::SiteAuth::internal_default_instance());
  _BidClosedEvent_default_instance_.get_mutable()->bid_ = const_cast< ::oatot::Bid*>(
      ::oatot::Bid::internal_default_instance());
  _Event_default_instance_.bid_closed_event_ = const_cast< ::oatot::BidClosedEvent*>(
      ::oatot::BidClosedEvent::internal_default_instance());
  _Event_default_instance_.summary_event_ = const_cast< ::oatot::SummaryEvent*>(
      ::oatot::SummaryEvent::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\tapi.proto\022\005oatot\032\037google/protobuf/time"
      "stamp.proto\"3\n\010SiteAuth\022\023\n\013btc_address\030\001"
      " \001(\t\022\022\n\nsession_id\030\002 \001(\t\"\026\n\006OaAuth\022\014\n\004qk"
      "ey\030\001 \001(\t\",\n\025SiteLoginStep1Request\022\023\n\013btc"
      "_address\030\001 \001(\t\"+\n\026SiteLoginStep1Response"
      "\022\021\n\tchallenge\030\001 \001(\t\"g\n\025SiteLoginStep2Req"
      "uest\022\023\n\013btc_address\030\001 \001(\t\022\021\n\tchallenge\030\002"
      " \001(\t\022\023\n\013signed_text\030\003 \001(\t\022\021\n\tsignature\030\004"
      " \001(\t\",\n\026SiteLoginStep2Response\022\022\n\nsessio"
      "n_id\030\002 \001(\t\"7\n\021SiteLogoutRequest\022\"\n\tsite_"
      "auth\030\001 \001(\0132\017.oatot.SiteAuth\"\024\n\022SiteLogou"
      "tResponse\"#\n\023OaLoginStep1Request\022\014\n\004qkey"
      "\030\001 \001(\t\"%\n\024OaLoginStep1Response\022\r\n\005token\030"
      "\001 \001(\t\"L\n\027SiteOaLoginStep2Request\022\"\n\tsite"
      "_auth\030\001 \001(\0132\017.oatot.SiteAuth\022\r\n\005token\030\002 "
      "\001(\t\"\032\n\030SiteOaLoginStep2Response\"8\n\022SiteM"
      "yQkeysRequest\022\"\n\tsite_auth\030\001 \001(\0132\017.oatot"
      ".SiteAuth\"x\n\004Qkey\022\014\n\004qkey\030\001 \001(\t\022.\n\nadded"
      "_time\030\002 \001(\0132\032.google.protobuf.Timestamp\022"
      "2\n\016last_used_time\030\003 \001(\0132\032.google.protobu"
      "f.Timestamp\"1\n\023SiteMyQkeysResponse\022\032\n\005qk"
      "eys\030\001 \003(\0132\013.oatot.Qkey\"I\n\025SiteRemoveQkey"
      "Request\022\"\n\tsite_auth\030\001 \001(\0132\017.oatot.SiteA"
      "uth\022\014\n\004qkey\030\002 \001(\t\"\030\n\026SiteRemoveQkeyRespo"
      "nse\";\n\025SiteDepositBtcRequest\022\"\n\tsite_aut"
      "h\030\001 \001(\0132\017.oatot.SiteAuth\"-\n\026SiteDepositB"
      "tcResponse\022\023\n\013btc_address\030\001 \001(\t\"c\n\026SiteW"
      "ithdrawBtcRequest\022\"\n\tsite_auth\030\001 \001(\0132\017.o"
      "atot.SiteAuth\022\023\n\013btc_address\030\002 \001(\t\022\020\n\010sa"
      "toshis\030\003 \001(\006\"%\n\027SiteWithdrawBtcResponse\022"
      "\n\n\002tx\030\001 \001(\t\"2\n\020OaBalanceRequest\022\036\n\007oa_au"
      "th\030\001 \001(\0132\r.oatot.OaAuth\"D\n\021OaBalanceResp"
      "onse\022\025\n\rfree_satoshis\030\001 \001(\006\022\030\n\020satoshis_"
      "on_bids\030\002 \001(\006\"\244\001\n\003Bid\022\r\n\005horse\030\001 \001(\t\022\020\n\010"
      "satoshis\030\002 \001(\006\022-\n\topen_time\030\003 \001(\0132\032.goog"
      "le.protobuf.Timestamp\022.\n\nclose_time\030\004 \001("
      "\0132\032.google.protobuf.Timestamp\022\016\n\006winner\030"
      "\005 \001(\t\022\r\n\005prize\030\006 \001(\006\"G\n\014OaBidRequest\022\036\n\007"
      "oa_auth\030\001 \001(\0132\r.oatot.OaAuth\022\027\n\003bid\030\002 \001("
      "\0132\n.oatot.Bid\"\017\n\rOaBidResponse\"7\n\025OaMyAc"
      "tiveBidsRequest\022\036\n\007oa_auth\030\001 \001(\0132\r.oatot"
      ".OaAuth\"2\n\026OaMyActiveBidsResponse\022\030\n\004bid"
      "s\030\001 \003(\0132\n.oatot.Bid\"<\n\032OaActiveBidsSumma"
      "ryRequest\022\036\n\007oa_auth\030\001 \001(\0132\r.oatot.OaAut"
      "h\"7\n\033OaActiveBidsSummaryResponse\022\030\n\004bids"
      "\030\001 \003(\0132\n.oatot.Bid\"H\n\023OaMyPastBidsReques"
      "t\022\036\n\007oa_auth\030\001 \001(\0132\r.oatot.OaAuth\022\021\n\tnex"
      "t_page\030\002 \001(\t\"C\n\024OaMyPastBidsResponse\022\030\n\004"
      "bids\030\001 \003(\0132\n.oatot.Bid\022\021\n\tnext_page\030\002 \001("
      "\t\"s\n\016UpdatesRequest\022 \n\007oa_auth\030\001 \001(\0132\r.o"
      "atot.OaAuthH\000\022$\n\tsite_auth\030\002 \001(\0132\017.oatot"
      ".SiteAuthH\000\022\021\n\tnext_page\030\003 \001(\tB\006\n\004auth\")"
      "\n\016BidClosedEvent\022\027\n\003bid\030\001 \001(\0132\n.oatot.Bi"
      "d\"/\n\014SummaryEvent\022\037\n\013new_summary\030\001 \003(\0132\n"
      ".oatot.Bid\"q\n\005Event\0221\n\020bid_closed_event\030"
      "\001 \001(\0132\025.oatot.BidClosedEventH\000\022,\n\rsummar"
      "y_event\030\002 \001(\0132\023.oatot.SummaryEventH\000B\007\n\005"
      "event\"B\n\017UpdatesResponse\022\034\n\006events\030\001 \003(\013"
      "2\014.oatot.Event\022\021\n\tnext_page\030\002 \001(\t2\340\010\n\005Oa"
      "tot\022M\n\016SiteLoginStep1\022\034.oatot.SiteLoginS"
      "tep1Request\032\035.oatot.SiteLoginStep1Respon"
      "se\022M\n\016SiteLoginStep2\022\034.oatot.SiteLoginSt"
      "ep2Request\032\035.oatot.SiteLoginStep2Respons"
      "e\022A\n\nSiteLogout\022\030.oatot.SiteLogoutReques"
      "t\032\031.oatot.SiteLogoutResponse\022G\n\014OaLoginS"
      "tep1\022\032.oatot.OaLoginStep1Request\032\033.oatot"
      ".OaLoginStep1Response\022S\n\020SiteOaLoginStep"
      "2\022\036.oatot.SiteOaLoginStep2Request\032\037.oato"
      "t.SiteOaLoginStep2Response\022D\n\013SiteMyQkey"
      "s\022\031.oatot.SiteMyQkeysRequest\032\032.oatot.Sit"
      "eMyQkeysResponse\022M\n\016SiteRemoveQkey\022\034.oat"
      "ot.SiteRemoveQkeyRequest\032\035.oatot.SiteRem"
      "oveQkeyResponse\022M\n\016SiteDepositBtc\022\034.oato"
      "t.SiteDepositBtcRequest\032\035.oatot.SiteDepo"
      "sitBtcResponse\022P\n\017SiteWithdrawBtc\022\035.oato"
      "t.SiteWithdrawBtcRequest\032\036.oatot.SiteWit"
      "hdrawBtcResponse\022>\n\tOaBalance\022\027.oatot.Oa"
      "BalanceRequest\032\030.oatot.OaBalanceResponse"
      "\0222\n\005OaBid\022\023.oatot.OaBidRequest\032\024.oatot.O"
      "aBidResponse\022M\n\016OaMyActiveBids\022\034.oatot.O"
      "aMyActiveBidsRequest\032\035.oatot.OaMyActiveB"
      "idsResponse\022\\\n\023OaActiveBidsSummary\022!.oat"
      "ot.OaActiveBidsSummaryRequest\032\".oatot.Oa"
      "ActiveBidsSummaryResponse\022G\n\014OaMyPastBid"
      "s\022\032.oatot.OaMyPastBidsRequest\032\033.oatot.Oa"
      "MyPastBidsResponse\0228\n\007Updates\022\025.oatot.Up"
      "datesRequest\032\026.oatot.UpdatesResponseb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3484);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_api_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteAuth::kBtcAddressFieldNumber;
const int SiteAuth::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteAuth::SiteAuth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteAuth)
}
SiteAuth::SiteAuth(const SiteAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  btc_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.btc_address().size() > 0) {
    btc_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btc_address_);
  }
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteAuth)
}

void SiteAuth::SharedCtor() {
  btc_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SiteAuth::~SiteAuth() {
  // @@protoc_insertion_point(destructor:oatot.SiteAuth)
  SharedDtor();
}

void SiteAuth::SharedDtor() {
  btc_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SiteAuth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteAuth::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteAuth& SiteAuth::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteAuth* SiteAuth::New(::google::protobuf::Arena* arena) const {
  SiteAuth* n = new SiteAuth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteAuth)
  btc_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SiteAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteAuth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string btc_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_btc_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->btc_address().data(), this->btc_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteAuth.btc_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), this->session_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteAuth.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteAuth)
  return false;
#undef DO_
}

void SiteAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btc_address().data(), this->btc_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteAuth.btc_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->btc_address(), output);
  }

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), this->session_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteAuth.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteAuth)
}

::google::protobuf::uint8* SiteAuth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btc_address().data(), this->btc_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteAuth.btc_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->btc_address(), target);
  }

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), this->session_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteAuth.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteAuth)
  return target;
}

size_t SiteAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteAuth)
  size_t total_size = 0;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->btc_address());
  }

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteAuth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteAuth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteAuth)
    MergeFrom(*source);
  }
}

void SiteAuth::MergeFrom(const SiteAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.btc_address().size() > 0) {

    btc_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btc_address_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
}

void SiteAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteAuth::CopyFrom(const SiteAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteAuth::IsInitialized() const {
  return true;
}

void SiteAuth::Swap(SiteAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteAuth::InternalSwap(SiteAuth* other) {
  btc_address_.Swap(&other->btc_address_);
  session_id_.Swap(&other->session_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteAuth::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteAuth

// string btc_address = 1;
void SiteAuth::clear_btc_address() {
  btc_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteAuth::btc_address() const {
  // @@protoc_insertion_point(field_get:oatot.SiteAuth.btc_address)
  return btc_address_.GetNoArena();
}
void SiteAuth::set_btc_address(const ::std::string& value) {
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteAuth.btc_address)
}
#if LANG_CXX11
void SiteAuth::set_btc_address(::std::string&& value) {
  
  btc_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteAuth.btc_address)
}
#endif
void SiteAuth::set_btc_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteAuth.btc_address)
}
void SiteAuth::set_btc_address(const char* value, size_t size) {
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteAuth.btc_address)
}
::std::string* SiteAuth::mutable_btc_address() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteAuth.btc_address)
  return btc_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteAuth::release_btc_address() {
  // @@protoc_insertion_point(field_release:oatot.SiteAuth.btc_address)
  
  return btc_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteAuth::set_allocated_btc_address(::std::string* btc_address) {
  if (btc_address != NULL) {
    
  } else {
    
  }
  btc_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), btc_address);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteAuth.btc_address)
}

// string session_id = 2;
void SiteAuth::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteAuth::session_id() const {
  // @@protoc_insertion_point(field_get:oatot.SiteAuth.session_id)
  return session_id_.GetNoArena();
}
void SiteAuth::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteAuth.session_id)
}
#if LANG_CXX11
void SiteAuth::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteAuth.session_id)
}
#endif
void SiteAuth::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteAuth.session_id)
}
void SiteAuth::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteAuth.session_id)
}
::std::string* SiteAuth::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteAuth.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteAuth::release_session_id() {
  // @@protoc_insertion_point(field_release:oatot.SiteAuth.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteAuth::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteAuth.session_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaAuth::kQkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaAuth::OaAuth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaAuth)
}
OaAuth::OaAuth(const OaAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  qkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.qkey().size() > 0) {
    qkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qkey_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.OaAuth)
}

void OaAuth::SharedCtor() {
  qkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OaAuth::~OaAuth() {
  // @@protoc_insertion_point(destructor:oatot.OaAuth)
  SharedDtor();
}

void OaAuth::SharedDtor() {
  qkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OaAuth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaAuth::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaAuth& OaAuth::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaAuth* OaAuth::New(::google::protobuf::Arena* arena) const {
  OaAuth* n = new OaAuth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaAuth)
  qkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OaAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaAuth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string qkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->qkey().data(), this->qkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.OaAuth.qkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaAuth)
  return false;
#undef DO_
}

void OaAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string qkey = 1;
  if (this->qkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qkey().data(), this->qkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.OaAuth.qkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->qkey(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaAuth)
}

::google::protobuf::uint8* OaAuth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string qkey = 1;
  if (this->qkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qkey().data(), this->qkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.OaAuth.qkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->qkey(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaAuth)
  return target;
}

size_t OaAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaAuth)
  size_t total_size = 0;

  // string qkey = 1;
  if (this->qkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->qkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const OaAuth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaAuth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaAuth)
    MergeFrom(*source);
  }
}

void OaAuth::MergeFrom(const OaAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.qkey().size() > 0) {

    qkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qkey_);
  }
}

void OaAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaAuth::CopyFrom(const OaAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaAuth::IsInitialized() const {
  return true;
}

void OaAuth::Swap(OaAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaAuth::InternalSwap(OaAuth* other) {
  qkey_.Swap(&other->qkey_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaAuth::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaAuth

// string qkey = 1;
void OaAuth::clear_qkey() {
  qkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OaAuth::qkey() const {
  // @@protoc_insertion_point(field_get:oatot.OaAuth.qkey)
  return qkey_.GetNoArena();
}
void OaAuth::set_qkey(const ::std::string& value) {
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.OaAuth.qkey)
}
#if LANG_CXX11
void OaAuth::set_qkey(::std::string&& value) {
  
  qkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.OaAuth.qkey)
}
#endif
void OaAuth::set_qkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.OaAuth.qkey)
}
void OaAuth::set_qkey(const char* value, size_t size) {
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.OaAuth.qkey)
}
::std::string* OaAuth::mutable_qkey() {
  
  // @@protoc_insertion_point(field_mutable:oatot.OaAuth.qkey)
  return qkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OaAuth::release_qkey() {
  // @@protoc_insertion_point(field_release:oatot.OaAuth.qkey)
  
  return qkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OaAuth::set_allocated_qkey(::std::string* qkey) {
  if (qkey != NULL) {
    
  } else {
    
  }
  qkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qkey);
  // @@protoc_insertion_point(field_set_allocated:oatot.OaAuth.qkey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteLoginStep1Request::kBtcAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteLoginStep1Request::SiteLoginStep1Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteLoginStep1Request)
}
SiteLoginStep1Request::SiteLoginStep1Request(const SiteLoginStep1Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  btc_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.btc_address().size() > 0) {
    btc_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btc_address_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteLoginStep1Request)
}

void SiteLoginStep1Request::SharedCtor() {
  btc_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SiteLoginStep1Request::~SiteLoginStep1Request() {
  // @@protoc_insertion_point(destructor:oatot.SiteLoginStep1Request)
  SharedDtor();
}

void SiteLoginStep1Request::SharedDtor() {
  btc_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SiteLoginStep1Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteLoginStep1Request::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteLoginStep1Request& SiteLoginStep1Request::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteLoginStep1Request* SiteLoginStep1Request::New(::google::protobuf::Arena* arena) const {
  SiteLoginStep1Request* n = new SiteLoginStep1Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteLoginStep1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteLoginStep1Request)
  btc_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SiteLoginStep1Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteLoginStep1Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string btc_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_btc_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->btc_address().data(), this->btc_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteLoginStep1Request.btc_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteLoginStep1Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteLoginStep1Request)
  return false;
#undef DO_
}

void SiteLoginStep1Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteLoginStep1Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btc_address().data(), this->btc_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep1Request.btc_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->btc_address(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteLoginStep1Request)
}

::google::protobuf::uint8* SiteLoginStep1Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteLoginStep1Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btc_address().data(), this->btc_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep1Request.btc_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->btc_address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteLoginStep1Request)
  return target;
}

size_t SiteLoginStep1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteLoginStep1Request)
  size_t total_size = 0;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->btc_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteLoginStep1Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteLoginStep1Request)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteLoginStep1Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteLoginStep1Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteLoginStep1Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteLoginStep1Request)
    MergeFrom(*source);
  }
}

void SiteLoginStep1Request::MergeFrom(const SiteLoginStep1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteLoginStep1Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.btc_address().size() > 0) {

    btc_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btc_address_);
  }
}

void SiteLoginStep1Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteLoginStep1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteLoginStep1Request::CopyFrom(const SiteLoginStep1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteLoginStep1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteLoginStep1Request::IsInitialized() const {
  return true;
}

void SiteLoginStep1Request::Swap(SiteLoginStep1Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteLoginStep1Request::InternalSwap(SiteLoginStep1Request* other) {
  btc_address_.Swap(&other->btc_address_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteLoginStep1Request::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteLoginStep1Request

// string btc_address = 1;
void SiteLoginStep1Request::clear_btc_address() {
  btc_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteLoginStep1Request::btc_address() const {
  // @@protoc_insertion_point(field_get:oatot.SiteLoginStep1Request.btc_address)
  return btc_address_.GetNoArena();
}
void SiteLoginStep1Request::set_btc_address(const ::std::string& value) {
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteLoginStep1Request.btc_address)
}
#if LANG_CXX11
void SiteLoginStep1Request::set_btc_address(::std::string&& value) {
  
  btc_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteLoginStep1Request.btc_address)
}
#endif
void SiteLoginStep1Request::set_btc_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteLoginStep1Request.btc_address)
}
void SiteLoginStep1Request::set_btc_address(const char* value, size_t size) {
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteLoginStep1Request.btc_address)
}
::std::string* SiteLoginStep1Request::mutable_btc_address() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteLoginStep1Request.btc_address)
  return btc_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteLoginStep1Request::release_btc_address() {
  // @@protoc_insertion_point(field_release:oatot.SiteLoginStep1Request.btc_address)
  
  return btc_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteLoginStep1Request::set_allocated_btc_address(::std::string* btc_address) {
  if (btc_address != NULL) {
    
  } else {
    
  }
  btc_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), btc_address);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteLoginStep1Request.btc_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteLoginStep1Response::kChallengeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteLoginStep1Response::SiteLoginStep1Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteLoginStep1Response)
}
SiteLoginStep1Response::SiteLoginStep1Response(const SiteLoginStep1Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  challenge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.challenge().size() > 0) {
    challenge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.challenge_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteLoginStep1Response)
}

void SiteLoginStep1Response::SharedCtor() {
  challenge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SiteLoginStep1Response::~SiteLoginStep1Response() {
  // @@protoc_insertion_point(destructor:oatot.SiteLoginStep1Response)
  SharedDtor();
}

void SiteLoginStep1Response::SharedDtor() {
  challenge_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SiteLoginStep1Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteLoginStep1Response::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteLoginStep1Response& SiteLoginStep1Response::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteLoginStep1Response* SiteLoginStep1Response::New(::google::protobuf::Arena* arena) const {
  SiteLoginStep1Response* n = new SiteLoginStep1Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteLoginStep1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteLoginStep1Response)
  challenge_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SiteLoginStep1Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteLoginStep1Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string challenge = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_challenge()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->challenge().data(), this->challenge().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteLoginStep1Response.challenge"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteLoginStep1Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteLoginStep1Response)
  return false;
#undef DO_
}

void SiteLoginStep1Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteLoginStep1Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string challenge = 1;
  if (this->challenge().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->challenge().data(), this->challenge().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep1Response.challenge");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->challenge(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteLoginStep1Response)
}

::google::protobuf::uint8* SiteLoginStep1Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteLoginStep1Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string challenge = 1;
  if (this->challenge().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->challenge().data(), this->challenge().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep1Response.challenge");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->challenge(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteLoginStep1Response)
  return target;
}

size_t SiteLoginStep1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteLoginStep1Response)
  size_t total_size = 0;

  // string challenge = 1;
  if (this->challenge().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->challenge());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteLoginStep1Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteLoginStep1Response)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteLoginStep1Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteLoginStep1Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteLoginStep1Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteLoginStep1Response)
    MergeFrom(*source);
  }
}

void SiteLoginStep1Response::MergeFrom(const SiteLoginStep1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteLoginStep1Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.challenge().size() > 0) {

    challenge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.challenge_);
  }
}

void SiteLoginStep1Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteLoginStep1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteLoginStep1Response::CopyFrom(const SiteLoginStep1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteLoginStep1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteLoginStep1Response::IsInitialized() const {
  return true;
}

void SiteLoginStep1Response::Swap(SiteLoginStep1Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteLoginStep1Response::InternalSwap(SiteLoginStep1Response* other) {
  challenge_.Swap(&other->challenge_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteLoginStep1Response::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteLoginStep1Response

// string challenge = 1;
void SiteLoginStep1Response::clear_challenge() {
  challenge_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteLoginStep1Response::challenge() const {
  // @@protoc_insertion_point(field_get:oatot.SiteLoginStep1Response.challenge)
  return challenge_.GetNoArena();
}
void SiteLoginStep1Response::set_challenge(const ::std::string& value) {
  
  challenge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteLoginStep1Response.challenge)
}
#if LANG_CXX11
void SiteLoginStep1Response::set_challenge(::std::string&& value) {
  
  challenge_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteLoginStep1Response.challenge)
}
#endif
void SiteLoginStep1Response::set_challenge(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  challenge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteLoginStep1Response.challenge)
}
void SiteLoginStep1Response::set_challenge(const char* value, size_t size) {
  
  challenge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteLoginStep1Response.challenge)
}
::std::string* SiteLoginStep1Response::mutable_challenge() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteLoginStep1Response.challenge)
  return challenge_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteLoginStep1Response::release_challenge() {
  // @@protoc_insertion_point(field_release:oatot.SiteLoginStep1Response.challenge)
  
  return challenge_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteLoginStep1Response::set_allocated_challenge(::std::string* challenge) {
  if (challenge != NULL) {
    
  } else {
    
  }
  challenge_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), challenge);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteLoginStep1Response.challenge)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteLoginStep2Request::kBtcAddressFieldNumber;
const int SiteLoginStep2Request::kChallengeFieldNumber;
const int SiteLoginStep2Request::kSignedTextFieldNumber;
const int SiteLoginStep2Request::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteLoginStep2Request::SiteLoginStep2Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteLoginStep2Request)
}
SiteLoginStep2Request::SiteLoginStep2Request(const SiteLoginStep2Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  btc_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.btc_address().size() > 0) {
    btc_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btc_address_);
  }
  challenge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.challenge().size() > 0) {
    challenge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.challenge_);
  }
  signed_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signed_text().size() > 0) {
    signed_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_text_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteLoginStep2Request)
}

void SiteLoginStep2Request::SharedCtor() {
  btc_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  challenge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signed_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SiteLoginStep2Request::~SiteLoginStep2Request() {
  // @@protoc_insertion_point(destructor:oatot.SiteLoginStep2Request)
  SharedDtor();
}

void SiteLoginStep2Request::SharedDtor() {
  btc_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  challenge_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signed_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SiteLoginStep2Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteLoginStep2Request::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteLoginStep2Request& SiteLoginStep2Request::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteLoginStep2Request* SiteLoginStep2Request::New(::google::protobuf::Arena* arena) const {
  SiteLoginStep2Request* n = new SiteLoginStep2Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteLoginStep2Request::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteLoginStep2Request)
  btc_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  challenge_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signed_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SiteLoginStep2Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteLoginStep2Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string btc_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_btc_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->btc_address().data(), this->btc_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteLoginStep2Request.btc_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string challenge = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_challenge()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->challenge().data(), this->challenge().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteLoginStep2Request.challenge"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signed_text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signed_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signed_text().data(), this->signed_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteLoginStep2Request.signed_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteLoginStep2Request.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteLoginStep2Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteLoginStep2Request)
  return false;
#undef DO_
}

void SiteLoginStep2Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteLoginStep2Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btc_address().data(), this->btc_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep2Request.btc_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->btc_address(), output);
  }

  // string challenge = 2;
  if (this->challenge().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->challenge().data(), this->challenge().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep2Request.challenge");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->challenge(), output);
  }

  // string signed_text = 3;
  if (this->signed_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_text().data(), this->signed_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep2Request.signed_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->signed_text(), output);
  }

  // string signature = 4;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep2Request.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->signature(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteLoginStep2Request)
}

::google::protobuf::uint8* SiteLoginStep2Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteLoginStep2Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btc_address().data(), this->btc_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep2Request.btc_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->btc_address(), target);
  }

  // string challenge = 2;
  if (this->challenge().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->challenge().data(), this->challenge().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep2Request.challenge");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->challenge(), target);
  }

  // string signed_text = 3;
  if (this->signed_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_text().data(), this->signed_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep2Request.signed_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->signed_text(), target);
  }

  // string signature = 4;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep2Request.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->signature(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteLoginStep2Request)
  return target;
}

size_t SiteLoginStep2Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteLoginStep2Request)
  size_t total_size = 0;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->btc_address());
  }

  // string challenge = 2;
  if (this->challenge().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->challenge());
  }

  // string signed_text = 3;
  if (this->signed_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signed_text());
  }

  // string signature = 4;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteLoginStep2Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteLoginStep2Request)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteLoginStep2Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteLoginStep2Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteLoginStep2Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteLoginStep2Request)
    MergeFrom(*source);
  }
}

void SiteLoginStep2Request::MergeFrom(const SiteLoginStep2Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteLoginStep2Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.btc_address().size() > 0) {

    btc_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btc_address_);
  }
  if (from.challenge().size() > 0) {

    challenge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.challenge_);
  }
  if (from.signed_text().size() > 0) {

    signed_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_text_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void SiteLoginStep2Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteLoginStep2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteLoginStep2Request::CopyFrom(const SiteLoginStep2Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteLoginStep2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteLoginStep2Request::IsInitialized() const {
  return true;
}

void SiteLoginStep2Request::Swap(SiteLoginStep2Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteLoginStep2Request::InternalSwap(SiteLoginStep2Request* other) {
  btc_address_.Swap(&other->btc_address_);
  challenge_.Swap(&other->challenge_);
  signed_text_.Swap(&other->signed_text_);
  signature_.Swap(&other->signature_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteLoginStep2Request::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteLoginStep2Request

// string btc_address = 1;
void SiteLoginStep2Request::clear_btc_address() {
  btc_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteLoginStep2Request::btc_address() const {
  // @@protoc_insertion_point(field_get:oatot.SiteLoginStep2Request.btc_address)
  return btc_address_.GetNoArena();
}
void SiteLoginStep2Request::set_btc_address(const ::std::string& value) {
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteLoginStep2Request.btc_address)
}
#if LANG_CXX11
void SiteLoginStep2Request::set_btc_address(::std::string&& value) {
  
  btc_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteLoginStep2Request.btc_address)
}
#endif
void SiteLoginStep2Request::set_btc_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteLoginStep2Request.btc_address)
}
void SiteLoginStep2Request::set_btc_address(const char* value, size_t size) {
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteLoginStep2Request.btc_address)
}
::std::string* SiteLoginStep2Request::mutable_btc_address() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteLoginStep2Request.btc_address)
  return btc_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteLoginStep2Request::release_btc_address() {
  // @@protoc_insertion_point(field_release:oatot.SiteLoginStep2Request.btc_address)
  
  return btc_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteLoginStep2Request::set_allocated_btc_address(::std::string* btc_address) {
  if (btc_address != NULL) {
    
  } else {
    
  }
  btc_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), btc_address);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteLoginStep2Request.btc_address)
}

// string challenge = 2;
void SiteLoginStep2Request::clear_challenge() {
  challenge_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteLoginStep2Request::challenge() const {
  // @@protoc_insertion_point(field_get:oatot.SiteLoginStep2Request.challenge)
  return challenge_.GetNoArena();
}
void SiteLoginStep2Request::set_challenge(const ::std::string& value) {
  
  challenge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteLoginStep2Request.challenge)
}
#if LANG_CXX11
void SiteLoginStep2Request::set_challenge(::std::string&& value) {
  
  challenge_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteLoginStep2Request.challenge)
}
#endif
void SiteLoginStep2Request::set_challenge(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  challenge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteLoginStep2Request.challenge)
}
void SiteLoginStep2Request::set_challenge(const char* value, size_t size) {
  
  challenge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteLoginStep2Request.challenge)
}
::std::string* SiteLoginStep2Request::mutable_challenge() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteLoginStep2Request.challenge)
  return challenge_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteLoginStep2Request::release_challenge() {
  // @@protoc_insertion_point(field_release:oatot.SiteLoginStep2Request.challenge)
  
  return challenge_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteLoginStep2Request::set_allocated_challenge(::std::string* challenge) {
  if (challenge != NULL) {
    
  } else {
    
  }
  challenge_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), challenge);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteLoginStep2Request.challenge)
}

// string signed_text = 3;
void SiteLoginStep2Request::clear_signed_text() {
  signed_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteLoginStep2Request::signed_text() const {
  // @@protoc_insertion_point(field_get:oatot.SiteLoginStep2Request.signed_text)
  return signed_text_.GetNoArena();
}
void SiteLoginStep2Request::set_signed_text(const ::std::string& value) {
  
  signed_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteLoginStep2Request.signed_text)
}
#if LANG_CXX11
void SiteLoginStep2Request::set_signed_text(::std::string&& value) {
  
  signed_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteLoginStep2Request.signed_text)
}
#endif
void SiteLoginStep2Request::set_signed_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signed_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteLoginStep2Request.signed_text)
}
void SiteLoginStep2Request::set_signed_text(const char* value, size_t size) {
  
  signed_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteLoginStep2Request.signed_text)
}
::std::string* SiteLoginStep2Request::mutable_signed_text() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteLoginStep2Request.signed_text)
  return signed_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteLoginStep2Request::release_signed_text() {
  // @@protoc_insertion_point(field_release:oatot.SiteLoginStep2Request.signed_text)
  
  return signed_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteLoginStep2Request::set_allocated_signed_text(::std::string* signed_text) {
  if (signed_text != NULL) {
    
  } else {
    
  }
  signed_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signed_text);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteLoginStep2Request.signed_text)
}

// string signature = 4;
void SiteLoginStep2Request::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteLoginStep2Request::signature() const {
  // @@protoc_insertion_point(field_get:oatot.SiteLoginStep2Request.signature)
  return signature_.GetNoArena();
}
void SiteLoginStep2Request::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteLoginStep2Request.signature)
}
#if LANG_CXX11
void SiteLoginStep2Request::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteLoginStep2Request.signature)
}
#endif
void SiteLoginStep2Request::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteLoginStep2Request.signature)
}
void SiteLoginStep2Request::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteLoginStep2Request.signature)
}
::std::string* SiteLoginStep2Request::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteLoginStep2Request.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteLoginStep2Request::release_signature() {
  // @@protoc_insertion_point(field_release:oatot.SiteLoginStep2Request.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteLoginStep2Request::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteLoginStep2Request.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteLoginStep2Response::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteLoginStep2Response::SiteLoginStep2Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteLoginStep2Response)
}
SiteLoginStep2Response::SiteLoginStep2Response(const SiteLoginStep2Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteLoginStep2Response)
}

void SiteLoginStep2Response::SharedCtor() {
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SiteLoginStep2Response::~SiteLoginStep2Response() {
  // @@protoc_insertion_point(destructor:oatot.SiteLoginStep2Response)
  SharedDtor();
}

void SiteLoginStep2Response::SharedDtor() {
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SiteLoginStep2Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteLoginStep2Response::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteLoginStep2Response& SiteLoginStep2Response::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteLoginStep2Response* SiteLoginStep2Response::New(::google::protobuf::Arena* arena) const {
  SiteLoginStep2Response* n = new SiteLoginStep2Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteLoginStep2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteLoginStep2Response)
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SiteLoginStep2Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteLoginStep2Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), this->session_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteLoginStep2Response.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteLoginStep2Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteLoginStep2Response)
  return false;
#undef DO_
}

void SiteLoginStep2Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteLoginStep2Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), this->session_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep2Response.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteLoginStep2Response)
}

::google::protobuf::uint8* SiteLoginStep2Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteLoginStep2Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), this->session_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteLoginStep2Response.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteLoginStep2Response)
  return target;
}

size_t SiteLoginStep2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteLoginStep2Response)
  size_t total_size = 0;

  // string session_id = 2;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteLoginStep2Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteLoginStep2Response)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteLoginStep2Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteLoginStep2Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteLoginStep2Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteLoginStep2Response)
    MergeFrom(*source);
  }
}

void SiteLoginStep2Response::MergeFrom(const SiteLoginStep2Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteLoginStep2Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
}

void SiteLoginStep2Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteLoginStep2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteLoginStep2Response::CopyFrom(const SiteLoginStep2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteLoginStep2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteLoginStep2Response::IsInitialized() const {
  return true;
}

void SiteLoginStep2Response::Swap(SiteLoginStep2Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteLoginStep2Response::InternalSwap(SiteLoginStep2Response* other) {
  session_id_.Swap(&other->session_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteLoginStep2Response::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteLoginStep2Response

// string session_id = 2;
void SiteLoginStep2Response::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteLoginStep2Response::session_id() const {
  // @@protoc_insertion_point(field_get:oatot.SiteLoginStep2Response.session_id)
  return session_id_.GetNoArena();
}
void SiteLoginStep2Response::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteLoginStep2Response.session_id)
}
#if LANG_CXX11
void SiteLoginStep2Response::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteLoginStep2Response.session_id)
}
#endif
void SiteLoginStep2Response::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteLoginStep2Response.session_id)
}
void SiteLoginStep2Response::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteLoginStep2Response.session_id)
}
::std::string* SiteLoginStep2Response::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteLoginStep2Response.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteLoginStep2Response::release_session_id() {
  // @@protoc_insertion_point(field_release:oatot.SiteLoginStep2Response.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteLoginStep2Response::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteLoginStep2Response.session_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteLogoutRequest::kSiteAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteLogoutRequest::SiteLogoutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteLogoutRequest)
}
SiteLogoutRequest::SiteLogoutRequest(const SiteLogoutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_site_auth()) {
    site_auth_ = new ::oatot::SiteAuth(*from.site_auth_);
  } else {
    site_auth_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteLogoutRequest)
}

void SiteLogoutRequest::SharedCtor() {
  site_auth_ = NULL;
  _cached_size_ = 0;
}

SiteLogoutRequest::~SiteLogoutRequest() {
  // @@protoc_insertion_point(destructor:oatot.SiteLogoutRequest)
  SharedDtor();
}

void SiteLogoutRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete site_auth_;
  }
}

void SiteLogoutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteLogoutRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteLogoutRequest& SiteLogoutRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteLogoutRequest* SiteLogoutRequest::New(::google::protobuf::Arena* arena) const {
  SiteLogoutRequest* n = new SiteLogoutRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteLogoutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteLogoutRequest)
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) {
    delete site_auth_;
  }
  site_auth_ = NULL;
}

bool SiteLogoutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteLogoutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.SiteAuth site_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_site_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteLogoutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteLogoutRequest)
  return false;
#undef DO_
}

void SiteLogoutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteLogoutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->site_auth_, output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteLogoutRequest)
}

::google::protobuf::uint8* SiteLogoutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteLogoutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->site_auth_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteLogoutRequest)
  return target;
}

size_t SiteLogoutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteLogoutRequest)
  size_t total_size = 0;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->site_auth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteLogoutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteLogoutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteLogoutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteLogoutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteLogoutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteLogoutRequest)
    MergeFrom(*source);
  }
}

void SiteLogoutRequest::MergeFrom(const SiteLogoutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteLogoutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_site_auth()) {
    mutable_site_auth()->::oatot::SiteAuth::MergeFrom(from.site_auth());
  }
}

void SiteLogoutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteLogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteLogoutRequest::CopyFrom(const SiteLogoutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteLogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteLogoutRequest::IsInitialized() const {
  return true;
}

void SiteLogoutRequest::Swap(SiteLogoutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteLogoutRequest::InternalSwap(SiteLogoutRequest* other) {
  std::swap(site_auth_, other->site_auth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteLogoutRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteLogoutRequest

// .oatot.SiteAuth site_auth = 1;
bool SiteLogoutRequest::has_site_auth() const {
  return this != internal_default_instance() && site_auth_ != NULL;
}
void SiteLogoutRequest::clear_site_auth() {
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) delete site_auth_;
  site_auth_ = NULL;
}
const ::oatot::SiteAuth& SiteLogoutRequest::site_auth() const {
  // @@protoc_insertion_point(field_get:oatot.SiteLogoutRequest.site_auth)
  return site_auth_ != NULL ? *site_auth_
                         : *::oatot::SiteAuth::internal_default_instance();
}
::oatot::SiteAuth* SiteLogoutRequest::mutable_site_auth() {
  
  if (site_auth_ == NULL) {
    site_auth_ = new ::oatot::SiteAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.SiteLogoutRequest.site_auth)
  return site_auth_;
}
::oatot::SiteAuth* SiteLogoutRequest::release_site_auth() {
  // @@protoc_insertion_point(field_release:oatot.SiteLogoutRequest.site_auth)
  
  ::oatot::SiteAuth* temp = site_auth_;
  site_auth_ = NULL;
  return temp;
}
void SiteLogoutRequest::set_allocated_site_auth(::oatot::SiteAuth* site_auth) {
  delete site_auth_;
  site_auth_ = site_auth;
  if (site_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteLogoutRequest.site_auth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteLogoutResponse::SiteLogoutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteLogoutResponse)
}
SiteLogoutResponse::SiteLogoutResponse(const SiteLogoutResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oatot.SiteLogoutResponse)
}

void SiteLogoutResponse::SharedCtor() {
  _cached_size_ = 0;
}

SiteLogoutResponse::~SiteLogoutResponse() {
  // @@protoc_insertion_point(destructor:oatot.SiteLogoutResponse)
  SharedDtor();
}

void SiteLogoutResponse::SharedDtor() {
}

void SiteLogoutResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteLogoutResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteLogoutResponse& SiteLogoutResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteLogoutResponse* SiteLogoutResponse::New(::google::protobuf::Arena* arena) const {
  SiteLogoutResponse* n = new SiteLogoutResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteLogoutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteLogoutResponse)
}

bool SiteLogoutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteLogoutResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteLogoutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteLogoutResponse)
  return false;
#undef DO_
}

void SiteLogoutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteLogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:oatot.SiteLogoutResponse)
}

::google::protobuf::uint8* SiteLogoutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteLogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteLogoutResponse)
  return target;
}

size_t SiteLogoutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteLogoutResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteLogoutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteLogoutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteLogoutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteLogoutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteLogoutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteLogoutResponse)
    MergeFrom(*source);
  }
}

void SiteLogoutResponse::MergeFrom(const SiteLogoutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteLogoutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SiteLogoutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteLogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteLogoutResponse::CopyFrom(const SiteLogoutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteLogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteLogoutResponse::IsInitialized() const {
  return true;
}

void SiteLogoutResponse::Swap(SiteLogoutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteLogoutResponse::InternalSwap(SiteLogoutResponse* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteLogoutResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteLogoutResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaLoginStep1Request::kQkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaLoginStep1Request::OaLoginStep1Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaLoginStep1Request)
}
OaLoginStep1Request::OaLoginStep1Request(const OaLoginStep1Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  qkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.qkey().size() > 0) {
    qkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qkey_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.OaLoginStep1Request)
}

void OaLoginStep1Request::SharedCtor() {
  qkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OaLoginStep1Request::~OaLoginStep1Request() {
  // @@protoc_insertion_point(destructor:oatot.OaLoginStep1Request)
  SharedDtor();
}

void OaLoginStep1Request::SharedDtor() {
  qkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OaLoginStep1Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaLoginStep1Request::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaLoginStep1Request& OaLoginStep1Request::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaLoginStep1Request* OaLoginStep1Request::New(::google::protobuf::Arena* arena) const {
  OaLoginStep1Request* n = new OaLoginStep1Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaLoginStep1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaLoginStep1Request)
  qkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OaLoginStep1Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaLoginStep1Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string qkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->qkey().data(), this->qkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.OaLoginStep1Request.qkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaLoginStep1Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaLoginStep1Request)
  return false;
#undef DO_
}

void OaLoginStep1Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaLoginStep1Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string qkey = 1;
  if (this->qkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qkey().data(), this->qkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.OaLoginStep1Request.qkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->qkey(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaLoginStep1Request)
}

::google::protobuf::uint8* OaLoginStep1Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaLoginStep1Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string qkey = 1;
  if (this->qkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qkey().data(), this->qkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.OaLoginStep1Request.qkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->qkey(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaLoginStep1Request)
  return target;
}

size_t OaLoginStep1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaLoginStep1Request)
  size_t total_size = 0;

  // string qkey = 1;
  if (this->qkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->qkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaLoginStep1Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaLoginStep1Request)
  GOOGLE_DCHECK_NE(&from, this);
  const OaLoginStep1Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaLoginStep1Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaLoginStep1Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaLoginStep1Request)
    MergeFrom(*source);
  }
}

void OaLoginStep1Request::MergeFrom(const OaLoginStep1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaLoginStep1Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.qkey().size() > 0) {

    qkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qkey_);
  }
}

void OaLoginStep1Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaLoginStep1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaLoginStep1Request::CopyFrom(const OaLoginStep1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaLoginStep1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaLoginStep1Request::IsInitialized() const {
  return true;
}

void OaLoginStep1Request::Swap(OaLoginStep1Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaLoginStep1Request::InternalSwap(OaLoginStep1Request* other) {
  qkey_.Swap(&other->qkey_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaLoginStep1Request::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaLoginStep1Request

// string qkey = 1;
void OaLoginStep1Request::clear_qkey() {
  qkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OaLoginStep1Request::qkey() const {
  // @@protoc_insertion_point(field_get:oatot.OaLoginStep1Request.qkey)
  return qkey_.GetNoArena();
}
void OaLoginStep1Request::set_qkey(const ::std::string& value) {
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.OaLoginStep1Request.qkey)
}
#if LANG_CXX11
void OaLoginStep1Request::set_qkey(::std::string&& value) {
  
  qkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.OaLoginStep1Request.qkey)
}
#endif
void OaLoginStep1Request::set_qkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.OaLoginStep1Request.qkey)
}
void OaLoginStep1Request::set_qkey(const char* value, size_t size) {
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.OaLoginStep1Request.qkey)
}
::std::string* OaLoginStep1Request::mutable_qkey() {
  
  // @@protoc_insertion_point(field_mutable:oatot.OaLoginStep1Request.qkey)
  return qkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OaLoginStep1Request::release_qkey() {
  // @@protoc_insertion_point(field_release:oatot.OaLoginStep1Request.qkey)
  
  return qkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OaLoginStep1Request::set_allocated_qkey(::std::string* qkey) {
  if (qkey != NULL) {
    
  } else {
    
  }
  qkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qkey);
  // @@protoc_insertion_point(field_set_allocated:oatot.OaLoginStep1Request.qkey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaLoginStep1Response::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaLoginStep1Response::OaLoginStep1Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaLoginStep1Response)
}
OaLoginStep1Response::OaLoginStep1Response(const OaLoginStep1Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.OaLoginStep1Response)
}

void OaLoginStep1Response::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OaLoginStep1Response::~OaLoginStep1Response() {
  // @@protoc_insertion_point(destructor:oatot.OaLoginStep1Response)
  SharedDtor();
}

void OaLoginStep1Response::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OaLoginStep1Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaLoginStep1Response::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaLoginStep1Response& OaLoginStep1Response::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaLoginStep1Response* OaLoginStep1Response::New(::google::protobuf::Arena* arena) const {
  OaLoginStep1Response* n = new OaLoginStep1Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaLoginStep1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaLoginStep1Response)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OaLoginStep1Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaLoginStep1Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.OaLoginStep1Response.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaLoginStep1Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaLoginStep1Response)
  return false;
#undef DO_
}

void OaLoginStep1Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaLoginStep1Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.OaLoginStep1Response.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaLoginStep1Response)
}

::google::protobuf::uint8* OaLoginStep1Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaLoginStep1Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.OaLoginStep1Response.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaLoginStep1Response)
  return target;
}

size_t OaLoginStep1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaLoginStep1Response)
  size_t total_size = 0;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaLoginStep1Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaLoginStep1Response)
  GOOGLE_DCHECK_NE(&from, this);
  const OaLoginStep1Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaLoginStep1Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaLoginStep1Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaLoginStep1Response)
    MergeFrom(*source);
  }
}

void OaLoginStep1Response::MergeFrom(const OaLoginStep1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaLoginStep1Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void OaLoginStep1Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaLoginStep1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaLoginStep1Response::CopyFrom(const OaLoginStep1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaLoginStep1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaLoginStep1Response::IsInitialized() const {
  return true;
}

void OaLoginStep1Response::Swap(OaLoginStep1Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaLoginStep1Response::InternalSwap(OaLoginStep1Response* other) {
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaLoginStep1Response::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaLoginStep1Response

// string token = 1;
void OaLoginStep1Response::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OaLoginStep1Response::token() const {
  // @@protoc_insertion_point(field_get:oatot.OaLoginStep1Response.token)
  return token_.GetNoArena();
}
void OaLoginStep1Response::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.OaLoginStep1Response.token)
}
#if LANG_CXX11
void OaLoginStep1Response::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.OaLoginStep1Response.token)
}
#endif
void OaLoginStep1Response::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.OaLoginStep1Response.token)
}
void OaLoginStep1Response::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.OaLoginStep1Response.token)
}
::std::string* OaLoginStep1Response::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:oatot.OaLoginStep1Response.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OaLoginStep1Response::release_token() {
  // @@protoc_insertion_point(field_release:oatot.OaLoginStep1Response.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OaLoginStep1Response::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:oatot.OaLoginStep1Response.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteOaLoginStep2Request::kSiteAuthFieldNumber;
const int SiteOaLoginStep2Request::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteOaLoginStep2Request::SiteOaLoginStep2Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteOaLoginStep2Request)
}
SiteOaLoginStep2Request::SiteOaLoginStep2Request(const SiteOaLoginStep2Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_site_auth()) {
    site_auth_ = new ::oatot::SiteAuth(*from.site_auth_);
  } else {
    site_auth_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteOaLoginStep2Request)
}

void SiteOaLoginStep2Request::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  site_auth_ = NULL;
  _cached_size_ = 0;
}

SiteOaLoginStep2Request::~SiteOaLoginStep2Request() {
  // @@protoc_insertion_point(destructor:oatot.SiteOaLoginStep2Request)
  SharedDtor();
}

void SiteOaLoginStep2Request::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete site_auth_;
  }
}

void SiteOaLoginStep2Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteOaLoginStep2Request::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteOaLoginStep2Request& SiteOaLoginStep2Request::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteOaLoginStep2Request* SiteOaLoginStep2Request::New(::google::protobuf::Arena* arena) const {
  SiteOaLoginStep2Request* n = new SiteOaLoginStep2Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteOaLoginStep2Request::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteOaLoginStep2Request)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) {
    delete site_auth_;
  }
  site_auth_ = NULL;
}

bool SiteOaLoginStep2Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteOaLoginStep2Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.SiteAuth site_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_site_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteOaLoginStep2Request.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteOaLoginStep2Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteOaLoginStep2Request)
  return false;
#undef DO_
}

void SiteOaLoginStep2Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteOaLoginStep2Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->site_auth_, output);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteOaLoginStep2Request.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteOaLoginStep2Request)
}

::google::protobuf::uint8* SiteOaLoginStep2Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteOaLoginStep2Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->site_auth_, deterministic, target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteOaLoginStep2Request.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteOaLoginStep2Request)
  return target;
}

size_t SiteOaLoginStep2Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteOaLoginStep2Request)
  size_t total_size = 0;

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->site_auth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteOaLoginStep2Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteOaLoginStep2Request)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteOaLoginStep2Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteOaLoginStep2Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteOaLoginStep2Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteOaLoginStep2Request)
    MergeFrom(*source);
  }
}

void SiteOaLoginStep2Request::MergeFrom(const SiteOaLoginStep2Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteOaLoginStep2Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_site_auth()) {
    mutable_site_auth()->::oatot::SiteAuth::MergeFrom(from.site_auth());
  }
}

void SiteOaLoginStep2Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteOaLoginStep2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteOaLoginStep2Request::CopyFrom(const SiteOaLoginStep2Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteOaLoginStep2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteOaLoginStep2Request::IsInitialized() const {
  return true;
}

void SiteOaLoginStep2Request::Swap(SiteOaLoginStep2Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteOaLoginStep2Request::InternalSwap(SiteOaLoginStep2Request* other) {
  token_.Swap(&other->token_);
  std::swap(site_auth_, other->site_auth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteOaLoginStep2Request::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteOaLoginStep2Request

// .oatot.SiteAuth site_auth = 1;
bool SiteOaLoginStep2Request::has_site_auth() const {
  return this != internal_default_instance() && site_auth_ != NULL;
}
void SiteOaLoginStep2Request::clear_site_auth() {
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) delete site_auth_;
  site_auth_ = NULL;
}
const ::oatot::SiteAuth& SiteOaLoginStep2Request::site_auth() const {
  // @@protoc_insertion_point(field_get:oatot.SiteOaLoginStep2Request.site_auth)
  return site_auth_ != NULL ? *site_auth_
                         : *::oatot::SiteAuth::internal_default_instance();
}
::oatot::SiteAuth* SiteOaLoginStep2Request::mutable_site_auth() {
  
  if (site_auth_ == NULL) {
    site_auth_ = new ::oatot::SiteAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.SiteOaLoginStep2Request.site_auth)
  return site_auth_;
}
::oatot::SiteAuth* SiteOaLoginStep2Request::release_site_auth() {
  // @@protoc_insertion_point(field_release:oatot.SiteOaLoginStep2Request.site_auth)
  
  ::oatot::SiteAuth* temp = site_auth_;
  site_auth_ = NULL;
  return temp;
}
void SiteOaLoginStep2Request::set_allocated_site_auth(::oatot::SiteAuth* site_auth) {
  delete site_auth_;
  site_auth_ = site_auth;
  if (site_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteOaLoginStep2Request.site_auth)
}

// string token = 2;
void SiteOaLoginStep2Request::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteOaLoginStep2Request::token() const {
  // @@protoc_insertion_point(field_get:oatot.SiteOaLoginStep2Request.token)
  return token_.GetNoArena();
}
void SiteOaLoginStep2Request::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteOaLoginStep2Request.token)
}
#if LANG_CXX11
void SiteOaLoginStep2Request::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteOaLoginStep2Request.token)
}
#endif
void SiteOaLoginStep2Request::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteOaLoginStep2Request.token)
}
void SiteOaLoginStep2Request::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteOaLoginStep2Request.token)
}
::std::string* SiteOaLoginStep2Request::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteOaLoginStep2Request.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteOaLoginStep2Request::release_token() {
  // @@protoc_insertion_point(field_release:oatot.SiteOaLoginStep2Request.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteOaLoginStep2Request::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteOaLoginStep2Request.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteOaLoginStep2Response::SiteOaLoginStep2Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteOaLoginStep2Response)
}
SiteOaLoginStep2Response::SiteOaLoginStep2Response(const SiteOaLoginStep2Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oatot.SiteOaLoginStep2Response)
}

void SiteOaLoginStep2Response::SharedCtor() {
  _cached_size_ = 0;
}

SiteOaLoginStep2Response::~SiteOaLoginStep2Response() {
  // @@protoc_insertion_point(destructor:oatot.SiteOaLoginStep2Response)
  SharedDtor();
}

void SiteOaLoginStep2Response::SharedDtor() {
}

void SiteOaLoginStep2Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteOaLoginStep2Response::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteOaLoginStep2Response& SiteOaLoginStep2Response::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteOaLoginStep2Response* SiteOaLoginStep2Response::New(::google::protobuf::Arena* arena) const {
  SiteOaLoginStep2Response* n = new SiteOaLoginStep2Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteOaLoginStep2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteOaLoginStep2Response)
}

bool SiteOaLoginStep2Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteOaLoginStep2Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteOaLoginStep2Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteOaLoginStep2Response)
  return false;
#undef DO_
}

void SiteOaLoginStep2Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteOaLoginStep2Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:oatot.SiteOaLoginStep2Response)
}

::google::protobuf::uint8* SiteOaLoginStep2Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteOaLoginStep2Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteOaLoginStep2Response)
  return target;
}

size_t SiteOaLoginStep2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteOaLoginStep2Response)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteOaLoginStep2Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteOaLoginStep2Response)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteOaLoginStep2Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteOaLoginStep2Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteOaLoginStep2Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteOaLoginStep2Response)
    MergeFrom(*source);
  }
}

void SiteOaLoginStep2Response::MergeFrom(const SiteOaLoginStep2Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteOaLoginStep2Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SiteOaLoginStep2Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteOaLoginStep2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteOaLoginStep2Response::CopyFrom(const SiteOaLoginStep2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteOaLoginStep2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteOaLoginStep2Response::IsInitialized() const {
  return true;
}

void SiteOaLoginStep2Response::Swap(SiteOaLoginStep2Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteOaLoginStep2Response::InternalSwap(SiteOaLoginStep2Response* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteOaLoginStep2Response::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteOaLoginStep2Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteMyQkeysRequest::kSiteAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteMyQkeysRequest::SiteMyQkeysRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteMyQkeysRequest)
}
SiteMyQkeysRequest::SiteMyQkeysRequest(const SiteMyQkeysRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_site_auth()) {
    site_auth_ = new ::oatot::SiteAuth(*from.site_auth_);
  } else {
    site_auth_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteMyQkeysRequest)
}

void SiteMyQkeysRequest::SharedCtor() {
  site_auth_ = NULL;
  _cached_size_ = 0;
}

SiteMyQkeysRequest::~SiteMyQkeysRequest() {
  // @@protoc_insertion_point(destructor:oatot.SiteMyQkeysRequest)
  SharedDtor();
}

void SiteMyQkeysRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete site_auth_;
  }
}

void SiteMyQkeysRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteMyQkeysRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteMyQkeysRequest& SiteMyQkeysRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteMyQkeysRequest* SiteMyQkeysRequest::New(::google::protobuf::Arena* arena) const {
  SiteMyQkeysRequest* n = new SiteMyQkeysRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteMyQkeysRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteMyQkeysRequest)
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) {
    delete site_auth_;
  }
  site_auth_ = NULL;
}

bool SiteMyQkeysRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteMyQkeysRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.SiteAuth site_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_site_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteMyQkeysRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteMyQkeysRequest)
  return false;
#undef DO_
}

void SiteMyQkeysRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteMyQkeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->site_auth_, output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteMyQkeysRequest)
}

::google::protobuf::uint8* SiteMyQkeysRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteMyQkeysRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->site_auth_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteMyQkeysRequest)
  return target;
}

size_t SiteMyQkeysRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteMyQkeysRequest)
  size_t total_size = 0;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->site_auth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteMyQkeysRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteMyQkeysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteMyQkeysRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteMyQkeysRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteMyQkeysRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteMyQkeysRequest)
    MergeFrom(*source);
  }
}

void SiteMyQkeysRequest::MergeFrom(const SiteMyQkeysRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteMyQkeysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_site_auth()) {
    mutable_site_auth()->::oatot::SiteAuth::MergeFrom(from.site_auth());
  }
}

void SiteMyQkeysRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteMyQkeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteMyQkeysRequest::CopyFrom(const SiteMyQkeysRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteMyQkeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteMyQkeysRequest::IsInitialized() const {
  return true;
}

void SiteMyQkeysRequest::Swap(SiteMyQkeysRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteMyQkeysRequest::InternalSwap(SiteMyQkeysRequest* other) {
  std::swap(site_auth_, other->site_auth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteMyQkeysRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteMyQkeysRequest

// .oatot.SiteAuth site_auth = 1;
bool SiteMyQkeysRequest::has_site_auth() const {
  return this != internal_default_instance() && site_auth_ != NULL;
}
void SiteMyQkeysRequest::clear_site_auth() {
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) delete site_auth_;
  site_auth_ = NULL;
}
const ::oatot::SiteAuth& SiteMyQkeysRequest::site_auth() const {
  // @@protoc_insertion_point(field_get:oatot.SiteMyQkeysRequest.site_auth)
  return site_auth_ != NULL ? *site_auth_
                         : *::oatot::SiteAuth::internal_default_instance();
}
::oatot::SiteAuth* SiteMyQkeysRequest::mutable_site_auth() {
  
  if (site_auth_ == NULL) {
    site_auth_ = new ::oatot::SiteAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.SiteMyQkeysRequest.site_auth)
  return site_auth_;
}
::oatot::SiteAuth* SiteMyQkeysRequest::release_site_auth() {
  // @@protoc_insertion_point(field_release:oatot.SiteMyQkeysRequest.site_auth)
  
  ::oatot::SiteAuth* temp = site_auth_;
  site_auth_ = NULL;
  return temp;
}
void SiteMyQkeysRequest::set_allocated_site_auth(::oatot::SiteAuth* site_auth) {
  delete site_auth_;
  site_auth_ = site_auth;
  if (site_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteMyQkeysRequest.site_auth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Qkey::kQkeyFieldNumber;
const int Qkey::kAddedTimeFieldNumber;
const int Qkey::kLastUsedTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Qkey::Qkey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.Qkey)
}
Qkey::Qkey(const Qkey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  qkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.qkey().size() > 0) {
    qkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qkey_);
  }
  if (from.has_added_time()) {
    added_time_ = new ::google::protobuf::Timestamp(*from.added_time_);
  } else {
    added_time_ = NULL;
  }
  if (from.has_last_used_time()) {
    last_used_time_ = new ::google::protobuf::Timestamp(*from.last_used_time_);
  } else {
    last_used_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.Qkey)
}

void Qkey::SharedCtor() {
  qkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&added_time_, 0, reinterpret_cast<char*>(&last_used_time_) -
    reinterpret_cast<char*>(&added_time_) + sizeof(last_used_time_));
  _cached_size_ = 0;
}

Qkey::~Qkey() {
  // @@protoc_insertion_point(destructor:oatot.Qkey)
  SharedDtor();
}

void Qkey::SharedDtor() {
  qkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete added_time_;
  }
  if (this != internal_default_instance()) {
    delete last_used_time_;
  }
}

void Qkey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Qkey::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Qkey& Qkey::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

Qkey* Qkey::New(::google::protobuf::Arena* arena) const {
  Qkey* n = new Qkey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Qkey::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.Qkey)
  qkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && added_time_ != NULL) {
    delete added_time_;
  }
  added_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_used_time_ != NULL) {
    delete last_used_time_;
  }
  last_used_time_ = NULL;
}

bool Qkey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.Qkey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string qkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->qkey().data(), this->qkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.Qkey.qkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp added_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_added_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp last_used_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_last_used_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.Qkey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.Qkey)
  return false;
#undef DO_
}

void Qkey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.Qkey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string qkey = 1;
  if (this->qkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qkey().data(), this->qkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.Qkey.qkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->qkey(), output);
  }

  // .google.protobuf.Timestamp added_time = 2;
  if (this->has_added_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->added_time_, output);
  }

  // .google.protobuf.Timestamp last_used_time = 3;
  if (this->has_last_used_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->last_used_time_, output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.Qkey)
}

::google::protobuf::uint8* Qkey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.Qkey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string qkey = 1;
  if (this->qkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qkey().data(), this->qkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.Qkey.qkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->qkey(), target);
  }

  // .google.protobuf.Timestamp added_time = 2;
  if (this->has_added_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->added_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp last_used_time = 3;
  if (this->has_last_used_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->last_used_time_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.Qkey)
  return target;
}

size_t Qkey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.Qkey)
  size_t total_size = 0;

  // string qkey = 1;
  if (this->qkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->qkey());
  }

  // .google.protobuf.Timestamp added_time = 2;
  if (this->has_added_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->added_time_);
  }

  // .google.protobuf.Timestamp last_used_time = 3;
  if (this->has_last_used_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->last_used_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Qkey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.Qkey)
  GOOGLE_DCHECK_NE(&from, this);
  const Qkey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Qkey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.Qkey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.Qkey)
    MergeFrom(*source);
  }
}

void Qkey::MergeFrom(const Qkey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.Qkey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.qkey().size() > 0) {

    qkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qkey_);
  }
  if (from.has_added_time()) {
    mutable_added_time()->::google::protobuf::Timestamp::MergeFrom(from.added_time());
  }
  if (from.has_last_used_time()) {
    mutable_last_used_time()->::google::protobuf::Timestamp::MergeFrom(from.last_used_time());
  }
}

void Qkey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.Qkey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Qkey::CopyFrom(const Qkey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.Qkey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Qkey::IsInitialized() const {
  return true;
}

void Qkey::Swap(Qkey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Qkey::InternalSwap(Qkey* other) {
  qkey_.Swap(&other->qkey_);
  std::swap(added_time_, other->added_time_);
  std::swap(last_used_time_, other->last_used_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Qkey::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Qkey

// string qkey = 1;
void Qkey::clear_qkey() {
  qkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Qkey::qkey() const {
  // @@protoc_insertion_point(field_get:oatot.Qkey.qkey)
  return qkey_.GetNoArena();
}
void Qkey::set_qkey(const ::std::string& value) {
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.Qkey.qkey)
}
#if LANG_CXX11
void Qkey::set_qkey(::std::string&& value) {
  
  qkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.Qkey.qkey)
}
#endif
void Qkey::set_qkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.Qkey.qkey)
}
void Qkey::set_qkey(const char* value, size_t size) {
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.Qkey.qkey)
}
::std::string* Qkey::mutable_qkey() {
  
  // @@protoc_insertion_point(field_mutable:oatot.Qkey.qkey)
  return qkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Qkey::release_qkey() {
  // @@protoc_insertion_point(field_release:oatot.Qkey.qkey)
  
  return qkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Qkey::set_allocated_qkey(::std::string* qkey) {
  if (qkey != NULL) {
    
  } else {
    
  }
  qkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qkey);
  // @@protoc_insertion_point(field_set_allocated:oatot.Qkey.qkey)
}

// .google.protobuf.Timestamp added_time = 2;
bool Qkey::has_added_time() const {
  return this != internal_default_instance() && added_time_ != NULL;
}
void Qkey::clear_added_time() {
  if (GetArenaNoVirtual() == NULL && added_time_ != NULL) delete added_time_;
  added_time_ = NULL;
}
const ::google::protobuf::Timestamp& Qkey::added_time() const {
  // @@protoc_insertion_point(field_get:oatot.Qkey.added_time)
  return added_time_ != NULL ? *added_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Qkey::mutable_added_time() {
  
  if (added_time_ == NULL) {
    added_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:oatot.Qkey.added_time)
  return added_time_;
}
::google::protobuf::Timestamp* Qkey::release_added_time() {
  // @@protoc_insertion_point(field_release:oatot.Qkey.added_time)
  
  ::google::protobuf::Timestamp* temp = added_time_;
  added_time_ = NULL;
  return temp;
}
void Qkey::set_allocated_added_time(::google::protobuf::Timestamp* added_time) {
  delete added_time_;
  if (added_time != NULL && added_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_added_time = new ::google::protobuf::Timestamp;
    new_added_time->CopyFrom(*added_time);
    added_time = new_added_time;
  }
  added_time_ = added_time;
  if (added_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.Qkey.added_time)
}

// .google.protobuf.Timestamp last_used_time = 3;
bool Qkey::has_last_used_time() const {
  return this != internal_default_instance() && last_used_time_ != NULL;
}
void Qkey::clear_last_used_time() {
  if (GetArenaNoVirtual() == NULL && last_used_time_ != NULL) delete last_used_time_;
  last_used_time_ = NULL;
}
const ::google::protobuf::Timestamp& Qkey::last_used_time() const {
  // @@protoc_insertion_point(field_get:oatot.Qkey.last_used_time)
  return last_used_time_ != NULL ? *last_used_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Qkey::mutable_last_used_time() {
  
  if (last_used_time_ == NULL) {
    last_used_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:oatot.Qkey.last_used_time)
  return last_used_time_;
}
::google::protobuf::Timestamp* Qkey::release_last_used_time() {
  // @@protoc_insertion_point(field_release:oatot.Qkey.last_used_time)
  
  ::google::protobuf::Timestamp* temp = last_used_time_;
  last_used_time_ = NULL;
  return temp;
}
void Qkey::set_allocated_last_used_time(::google::protobuf::Timestamp* last_used_time) {
  delete last_used_time_;
  if (last_used_time != NULL && last_used_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_last_used_time = new ::google::protobuf::Timestamp;
    new_last_used_time->CopyFrom(*last_used_time);
    last_used_time = new_last_used_time;
  }
  last_used_time_ = last_used_time;
  if (last_used_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.Qkey.last_used_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteMyQkeysResponse::kQkeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteMyQkeysResponse::SiteMyQkeysResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteMyQkeysResponse)
}
SiteMyQkeysResponse::SiteMyQkeysResponse(const SiteMyQkeysResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      qkeys_(from.qkeys_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oatot.SiteMyQkeysResponse)
}

void SiteMyQkeysResponse::SharedCtor() {
  _cached_size_ = 0;
}

SiteMyQkeysResponse::~SiteMyQkeysResponse() {
  // @@protoc_insertion_point(destructor:oatot.SiteMyQkeysResponse)
  SharedDtor();
}

void SiteMyQkeysResponse::SharedDtor() {
}

void SiteMyQkeysResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteMyQkeysResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteMyQkeysResponse& SiteMyQkeysResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteMyQkeysResponse* SiteMyQkeysResponse::New(::google::protobuf::Arena* arena) const {
  SiteMyQkeysResponse* n = new SiteMyQkeysResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteMyQkeysResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteMyQkeysResponse)
  qkeys_.Clear();
}

bool SiteMyQkeysResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteMyQkeysResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .oatot.Qkey qkeys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_qkeys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteMyQkeysResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteMyQkeysResponse)
  return false;
#undef DO_
}

void SiteMyQkeysResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteMyQkeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Qkey qkeys = 1;
  for (unsigned int i = 0, n = this->qkeys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->qkeys(i), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteMyQkeysResponse)
}

::google::protobuf::uint8* SiteMyQkeysResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteMyQkeysResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Qkey qkeys = 1;
  for (unsigned int i = 0, n = this->qkeys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->qkeys(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteMyQkeysResponse)
  return target;
}

size_t SiteMyQkeysResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteMyQkeysResponse)
  size_t total_size = 0;

  // repeated .oatot.Qkey qkeys = 1;
  {
    unsigned int count = this->qkeys_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->qkeys(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteMyQkeysResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteMyQkeysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteMyQkeysResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteMyQkeysResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteMyQkeysResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteMyQkeysResponse)
    MergeFrom(*source);
  }
}

void SiteMyQkeysResponse::MergeFrom(const SiteMyQkeysResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteMyQkeysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  qkeys_.MergeFrom(from.qkeys_);
}

void SiteMyQkeysResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteMyQkeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteMyQkeysResponse::CopyFrom(const SiteMyQkeysResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteMyQkeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteMyQkeysResponse::IsInitialized() const {
  return true;
}

void SiteMyQkeysResponse::Swap(SiteMyQkeysResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteMyQkeysResponse::InternalSwap(SiteMyQkeysResponse* other) {
  qkeys_.InternalSwap(&other->qkeys_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteMyQkeysResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteMyQkeysResponse

// repeated .oatot.Qkey qkeys = 1;
int SiteMyQkeysResponse::qkeys_size() const {
  return qkeys_.size();
}
void SiteMyQkeysResponse::clear_qkeys() {
  qkeys_.Clear();
}
const ::oatot::Qkey& SiteMyQkeysResponse::qkeys(int index) const {
  // @@protoc_insertion_point(field_get:oatot.SiteMyQkeysResponse.qkeys)
  return qkeys_.Get(index);
}
::oatot::Qkey* SiteMyQkeysResponse::mutable_qkeys(int index) {
  // @@protoc_insertion_point(field_mutable:oatot.SiteMyQkeysResponse.qkeys)
  return qkeys_.Mutable(index);
}
::oatot::Qkey* SiteMyQkeysResponse::add_qkeys() {
  // @@protoc_insertion_point(field_add:oatot.SiteMyQkeysResponse.qkeys)
  return qkeys_.Add();
}
::google::protobuf::RepeatedPtrField< ::oatot::Qkey >*
SiteMyQkeysResponse::mutable_qkeys() {
  // @@protoc_insertion_point(field_mutable_list:oatot.SiteMyQkeysResponse.qkeys)
  return &qkeys_;
}
const ::google::protobuf::RepeatedPtrField< ::oatot::Qkey >&
SiteMyQkeysResponse::qkeys() const {
  // @@protoc_insertion_point(field_list:oatot.SiteMyQkeysResponse.qkeys)
  return qkeys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteRemoveQkeyRequest::kSiteAuthFieldNumber;
const int SiteRemoveQkeyRequest::kQkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteRemoveQkeyRequest::SiteRemoveQkeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteRemoveQkeyRequest)
}
SiteRemoveQkeyRequest::SiteRemoveQkeyRequest(const SiteRemoveQkeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  qkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.qkey().size() > 0) {
    qkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qkey_);
  }
  if (from.has_site_auth()) {
    site_auth_ = new ::oatot::SiteAuth(*from.site_auth_);
  } else {
    site_auth_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteRemoveQkeyRequest)
}

void SiteRemoveQkeyRequest::SharedCtor() {
  qkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  site_auth_ = NULL;
  _cached_size_ = 0;
}

SiteRemoveQkeyRequest::~SiteRemoveQkeyRequest() {
  // @@protoc_insertion_point(destructor:oatot.SiteRemoveQkeyRequest)
  SharedDtor();
}

void SiteRemoveQkeyRequest::SharedDtor() {
  qkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete site_auth_;
  }
}

void SiteRemoveQkeyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteRemoveQkeyRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteRemoveQkeyRequest& SiteRemoveQkeyRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteRemoveQkeyRequest* SiteRemoveQkeyRequest::New(::google::protobuf::Arena* arena) const {
  SiteRemoveQkeyRequest* n = new SiteRemoveQkeyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteRemoveQkeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteRemoveQkeyRequest)
  qkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) {
    delete site_auth_;
  }
  site_auth_ = NULL;
}

bool SiteRemoveQkeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteRemoveQkeyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.SiteAuth site_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_site_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string qkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->qkey().data(), this->qkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteRemoveQkeyRequest.qkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteRemoveQkeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteRemoveQkeyRequest)
  return false;
#undef DO_
}

void SiteRemoveQkeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteRemoveQkeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->site_auth_, output);
  }

  // string qkey = 2;
  if (this->qkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qkey().data(), this->qkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteRemoveQkeyRequest.qkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->qkey(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteRemoveQkeyRequest)
}

::google::protobuf::uint8* SiteRemoveQkeyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteRemoveQkeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->site_auth_, deterministic, target);
  }

  // string qkey = 2;
  if (this->qkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qkey().data(), this->qkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteRemoveQkeyRequest.qkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->qkey(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteRemoveQkeyRequest)
  return target;
}

size_t SiteRemoveQkeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteRemoveQkeyRequest)
  size_t total_size = 0;

  // string qkey = 2;
  if (this->qkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->qkey());
  }

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->site_auth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteRemoveQkeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteRemoveQkeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteRemoveQkeyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteRemoveQkeyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteRemoveQkeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteRemoveQkeyRequest)
    MergeFrom(*source);
  }
}

void SiteRemoveQkeyRequest::MergeFrom(const SiteRemoveQkeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteRemoveQkeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.qkey().size() > 0) {

    qkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qkey_);
  }
  if (from.has_site_auth()) {
    mutable_site_auth()->::oatot::SiteAuth::MergeFrom(from.site_auth());
  }
}

void SiteRemoveQkeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteRemoveQkeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteRemoveQkeyRequest::CopyFrom(const SiteRemoveQkeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteRemoveQkeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteRemoveQkeyRequest::IsInitialized() const {
  return true;
}

void SiteRemoveQkeyRequest::Swap(SiteRemoveQkeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteRemoveQkeyRequest::InternalSwap(SiteRemoveQkeyRequest* other) {
  qkey_.Swap(&other->qkey_);
  std::swap(site_auth_, other->site_auth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteRemoveQkeyRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteRemoveQkeyRequest

// .oatot.SiteAuth site_auth = 1;
bool SiteRemoveQkeyRequest::has_site_auth() const {
  return this != internal_default_instance() && site_auth_ != NULL;
}
void SiteRemoveQkeyRequest::clear_site_auth() {
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) delete site_auth_;
  site_auth_ = NULL;
}
const ::oatot::SiteAuth& SiteRemoveQkeyRequest::site_auth() const {
  // @@protoc_insertion_point(field_get:oatot.SiteRemoveQkeyRequest.site_auth)
  return site_auth_ != NULL ? *site_auth_
                         : *::oatot::SiteAuth::internal_default_instance();
}
::oatot::SiteAuth* SiteRemoveQkeyRequest::mutable_site_auth() {
  
  if (site_auth_ == NULL) {
    site_auth_ = new ::oatot::SiteAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.SiteRemoveQkeyRequest.site_auth)
  return site_auth_;
}
::oatot::SiteAuth* SiteRemoveQkeyRequest::release_site_auth() {
  // @@protoc_insertion_point(field_release:oatot.SiteRemoveQkeyRequest.site_auth)
  
  ::oatot::SiteAuth* temp = site_auth_;
  site_auth_ = NULL;
  return temp;
}
void SiteRemoveQkeyRequest::set_allocated_site_auth(::oatot::SiteAuth* site_auth) {
  delete site_auth_;
  site_auth_ = site_auth;
  if (site_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteRemoveQkeyRequest.site_auth)
}

// string qkey = 2;
void SiteRemoveQkeyRequest::clear_qkey() {
  qkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteRemoveQkeyRequest::qkey() const {
  // @@protoc_insertion_point(field_get:oatot.SiteRemoveQkeyRequest.qkey)
  return qkey_.GetNoArena();
}
void SiteRemoveQkeyRequest::set_qkey(const ::std::string& value) {
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteRemoveQkeyRequest.qkey)
}
#if LANG_CXX11
void SiteRemoveQkeyRequest::set_qkey(::std::string&& value) {
  
  qkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteRemoveQkeyRequest.qkey)
}
#endif
void SiteRemoveQkeyRequest::set_qkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteRemoveQkeyRequest.qkey)
}
void SiteRemoveQkeyRequest::set_qkey(const char* value, size_t size) {
  
  qkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteRemoveQkeyRequest.qkey)
}
::std::string* SiteRemoveQkeyRequest::mutable_qkey() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteRemoveQkeyRequest.qkey)
  return qkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteRemoveQkeyRequest::release_qkey() {
  // @@protoc_insertion_point(field_release:oatot.SiteRemoveQkeyRequest.qkey)
  
  return qkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteRemoveQkeyRequest::set_allocated_qkey(::std::string* qkey) {
  if (qkey != NULL) {
    
  } else {
    
  }
  qkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qkey);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteRemoveQkeyRequest.qkey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteRemoveQkeyResponse::SiteRemoveQkeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteRemoveQkeyResponse)
}
SiteRemoveQkeyResponse::SiteRemoveQkeyResponse(const SiteRemoveQkeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oatot.SiteRemoveQkeyResponse)
}

void SiteRemoveQkeyResponse::SharedCtor() {
  _cached_size_ = 0;
}

SiteRemoveQkeyResponse::~SiteRemoveQkeyResponse() {
  // @@protoc_insertion_point(destructor:oatot.SiteRemoveQkeyResponse)
  SharedDtor();
}

void SiteRemoveQkeyResponse::SharedDtor() {
}

void SiteRemoveQkeyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteRemoveQkeyResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteRemoveQkeyResponse& SiteRemoveQkeyResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteRemoveQkeyResponse* SiteRemoveQkeyResponse::New(::google::protobuf::Arena* arena) const {
  SiteRemoveQkeyResponse* n = new SiteRemoveQkeyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteRemoveQkeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteRemoveQkeyResponse)
}

bool SiteRemoveQkeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteRemoveQkeyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteRemoveQkeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteRemoveQkeyResponse)
  return false;
#undef DO_
}

void SiteRemoveQkeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteRemoveQkeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:oatot.SiteRemoveQkeyResponse)
}

::google::protobuf::uint8* SiteRemoveQkeyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteRemoveQkeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteRemoveQkeyResponse)
  return target;
}

size_t SiteRemoveQkeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteRemoveQkeyResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteRemoveQkeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteRemoveQkeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteRemoveQkeyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteRemoveQkeyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteRemoveQkeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteRemoveQkeyResponse)
    MergeFrom(*source);
  }
}

void SiteRemoveQkeyResponse::MergeFrom(const SiteRemoveQkeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteRemoveQkeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SiteRemoveQkeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteRemoveQkeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteRemoveQkeyResponse::CopyFrom(const SiteRemoveQkeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteRemoveQkeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteRemoveQkeyResponse::IsInitialized() const {
  return true;
}

void SiteRemoveQkeyResponse::Swap(SiteRemoveQkeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteRemoveQkeyResponse::InternalSwap(SiteRemoveQkeyResponse* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteRemoveQkeyResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteRemoveQkeyResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteDepositBtcRequest::kSiteAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteDepositBtcRequest::SiteDepositBtcRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteDepositBtcRequest)
}
SiteDepositBtcRequest::SiteDepositBtcRequest(const SiteDepositBtcRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_site_auth()) {
    site_auth_ = new ::oatot::SiteAuth(*from.site_auth_);
  } else {
    site_auth_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteDepositBtcRequest)
}

void SiteDepositBtcRequest::SharedCtor() {
  site_auth_ = NULL;
  _cached_size_ = 0;
}

SiteDepositBtcRequest::~SiteDepositBtcRequest() {
  // @@protoc_insertion_point(destructor:oatot.SiteDepositBtcRequest)
  SharedDtor();
}

void SiteDepositBtcRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete site_auth_;
  }
}

void SiteDepositBtcRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteDepositBtcRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteDepositBtcRequest& SiteDepositBtcRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteDepositBtcRequest* SiteDepositBtcRequest::New(::google::protobuf::Arena* arena) const {
  SiteDepositBtcRequest* n = new SiteDepositBtcRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteDepositBtcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteDepositBtcRequest)
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) {
    delete site_auth_;
  }
  site_auth_ = NULL;
}

bool SiteDepositBtcRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteDepositBtcRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.SiteAuth site_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_site_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteDepositBtcRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteDepositBtcRequest)
  return false;
#undef DO_
}

void SiteDepositBtcRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteDepositBtcRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->site_auth_, output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteDepositBtcRequest)
}

::google::protobuf::uint8* SiteDepositBtcRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteDepositBtcRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->site_auth_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteDepositBtcRequest)
  return target;
}

size_t SiteDepositBtcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteDepositBtcRequest)
  size_t total_size = 0;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->site_auth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteDepositBtcRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteDepositBtcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteDepositBtcRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteDepositBtcRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteDepositBtcRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteDepositBtcRequest)
    MergeFrom(*source);
  }
}

void SiteDepositBtcRequest::MergeFrom(const SiteDepositBtcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteDepositBtcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_site_auth()) {
    mutable_site_auth()->::oatot::SiteAuth::MergeFrom(from.site_auth());
  }
}

void SiteDepositBtcRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteDepositBtcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteDepositBtcRequest::CopyFrom(const SiteDepositBtcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteDepositBtcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteDepositBtcRequest::IsInitialized() const {
  return true;
}

void SiteDepositBtcRequest::Swap(SiteDepositBtcRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteDepositBtcRequest::InternalSwap(SiteDepositBtcRequest* other) {
  std::swap(site_auth_, other->site_auth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteDepositBtcRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteDepositBtcRequest

// .oatot.SiteAuth site_auth = 1;
bool SiteDepositBtcRequest::has_site_auth() const {
  return this != internal_default_instance() && site_auth_ != NULL;
}
void SiteDepositBtcRequest::clear_site_auth() {
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) delete site_auth_;
  site_auth_ = NULL;
}
const ::oatot::SiteAuth& SiteDepositBtcRequest::site_auth() const {
  // @@protoc_insertion_point(field_get:oatot.SiteDepositBtcRequest.site_auth)
  return site_auth_ != NULL ? *site_auth_
                         : *::oatot::SiteAuth::internal_default_instance();
}
::oatot::SiteAuth* SiteDepositBtcRequest::mutable_site_auth() {
  
  if (site_auth_ == NULL) {
    site_auth_ = new ::oatot::SiteAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.SiteDepositBtcRequest.site_auth)
  return site_auth_;
}
::oatot::SiteAuth* SiteDepositBtcRequest::release_site_auth() {
  // @@protoc_insertion_point(field_release:oatot.SiteDepositBtcRequest.site_auth)
  
  ::oatot::SiteAuth* temp = site_auth_;
  site_auth_ = NULL;
  return temp;
}
void SiteDepositBtcRequest::set_allocated_site_auth(::oatot::SiteAuth* site_auth) {
  delete site_auth_;
  site_auth_ = site_auth;
  if (site_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteDepositBtcRequest.site_auth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteDepositBtcResponse::kBtcAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteDepositBtcResponse::SiteDepositBtcResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteDepositBtcResponse)
}
SiteDepositBtcResponse::SiteDepositBtcResponse(const SiteDepositBtcResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  btc_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.btc_address().size() > 0) {
    btc_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btc_address_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteDepositBtcResponse)
}

void SiteDepositBtcResponse::SharedCtor() {
  btc_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SiteDepositBtcResponse::~SiteDepositBtcResponse() {
  // @@protoc_insertion_point(destructor:oatot.SiteDepositBtcResponse)
  SharedDtor();
}

void SiteDepositBtcResponse::SharedDtor() {
  btc_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SiteDepositBtcResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteDepositBtcResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteDepositBtcResponse& SiteDepositBtcResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteDepositBtcResponse* SiteDepositBtcResponse::New(::google::protobuf::Arena* arena) const {
  SiteDepositBtcResponse* n = new SiteDepositBtcResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteDepositBtcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteDepositBtcResponse)
  btc_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SiteDepositBtcResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteDepositBtcResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string btc_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_btc_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->btc_address().data(), this->btc_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteDepositBtcResponse.btc_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteDepositBtcResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteDepositBtcResponse)
  return false;
#undef DO_
}

void SiteDepositBtcResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteDepositBtcResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btc_address().data(), this->btc_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteDepositBtcResponse.btc_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->btc_address(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteDepositBtcResponse)
}

::google::protobuf::uint8* SiteDepositBtcResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteDepositBtcResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btc_address().data(), this->btc_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteDepositBtcResponse.btc_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->btc_address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteDepositBtcResponse)
  return target;
}

size_t SiteDepositBtcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteDepositBtcResponse)
  size_t total_size = 0;

  // string btc_address = 1;
  if (this->btc_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->btc_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteDepositBtcResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteDepositBtcResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteDepositBtcResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteDepositBtcResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteDepositBtcResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteDepositBtcResponse)
    MergeFrom(*source);
  }
}

void SiteDepositBtcResponse::MergeFrom(const SiteDepositBtcResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteDepositBtcResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.btc_address().size() > 0) {

    btc_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btc_address_);
  }
}

void SiteDepositBtcResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteDepositBtcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteDepositBtcResponse::CopyFrom(const SiteDepositBtcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteDepositBtcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteDepositBtcResponse::IsInitialized() const {
  return true;
}

void SiteDepositBtcResponse::Swap(SiteDepositBtcResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteDepositBtcResponse::InternalSwap(SiteDepositBtcResponse* other) {
  btc_address_.Swap(&other->btc_address_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteDepositBtcResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteDepositBtcResponse

// string btc_address = 1;
void SiteDepositBtcResponse::clear_btc_address() {
  btc_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteDepositBtcResponse::btc_address() const {
  // @@protoc_insertion_point(field_get:oatot.SiteDepositBtcResponse.btc_address)
  return btc_address_.GetNoArena();
}
void SiteDepositBtcResponse::set_btc_address(const ::std::string& value) {
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteDepositBtcResponse.btc_address)
}
#if LANG_CXX11
void SiteDepositBtcResponse::set_btc_address(::std::string&& value) {
  
  btc_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteDepositBtcResponse.btc_address)
}
#endif
void SiteDepositBtcResponse::set_btc_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteDepositBtcResponse.btc_address)
}
void SiteDepositBtcResponse::set_btc_address(const char* value, size_t size) {
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteDepositBtcResponse.btc_address)
}
::std::string* SiteDepositBtcResponse::mutable_btc_address() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteDepositBtcResponse.btc_address)
  return btc_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteDepositBtcResponse::release_btc_address() {
  // @@protoc_insertion_point(field_release:oatot.SiteDepositBtcResponse.btc_address)
  
  return btc_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteDepositBtcResponse::set_allocated_btc_address(::std::string* btc_address) {
  if (btc_address != NULL) {
    
  } else {
    
  }
  btc_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), btc_address);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteDepositBtcResponse.btc_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteWithdrawBtcRequest::kSiteAuthFieldNumber;
const int SiteWithdrawBtcRequest::kBtcAddressFieldNumber;
const int SiteWithdrawBtcRequest::kSatoshisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteWithdrawBtcRequest::SiteWithdrawBtcRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteWithdrawBtcRequest)
}
SiteWithdrawBtcRequest::SiteWithdrawBtcRequest(const SiteWithdrawBtcRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  btc_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.btc_address().size() > 0) {
    btc_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btc_address_);
  }
  if (from.has_site_auth()) {
    site_auth_ = new ::oatot::SiteAuth(*from.site_auth_);
  } else {
    site_auth_ = NULL;
  }
  satoshis_ = from.satoshis_;
  // @@protoc_insertion_point(copy_constructor:oatot.SiteWithdrawBtcRequest)
}

void SiteWithdrawBtcRequest::SharedCtor() {
  btc_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&site_auth_, 0, reinterpret_cast<char*>(&satoshis_) -
    reinterpret_cast<char*>(&site_auth_) + sizeof(satoshis_));
  _cached_size_ = 0;
}

SiteWithdrawBtcRequest::~SiteWithdrawBtcRequest() {
  // @@protoc_insertion_point(destructor:oatot.SiteWithdrawBtcRequest)
  SharedDtor();
}

void SiteWithdrawBtcRequest::SharedDtor() {
  btc_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete site_auth_;
  }
}

void SiteWithdrawBtcRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteWithdrawBtcRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteWithdrawBtcRequest& SiteWithdrawBtcRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteWithdrawBtcRequest* SiteWithdrawBtcRequest::New(::google::protobuf::Arena* arena) const {
  SiteWithdrawBtcRequest* n = new SiteWithdrawBtcRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteWithdrawBtcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteWithdrawBtcRequest)
  btc_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) {
    delete site_auth_;
  }
  site_auth_ = NULL;
  satoshis_ = GOOGLE_ULONGLONG(0);
}

bool SiteWithdrawBtcRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteWithdrawBtcRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.SiteAuth site_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_site_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string btc_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_btc_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->btc_address().data(), this->btc_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteWithdrawBtcRequest.btc_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 satoshis = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &satoshis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteWithdrawBtcRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteWithdrawBtcRequest)
  return false;
#undef DO_
}

void SiteWithdrawBtcRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteWithdrawBtcRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->site_auth_, output);
  }

  // string btc_address = 2;
  if (this->btc_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btc_address().data(), this->btc_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteWithdrawBtcRequest.btc_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->btc_address(), output);
  }

  // fixed64 satoshis = 3;
  if (this->satoshis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->satoshis(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteWithdrawBtcRequest)
}

::google::protobuf::uint8* SiteWithdrawBtcRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteWithdrawBtcRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->site_auth_, deterministic, target);
  }

  // string btc_address = 2;
  if (this->btc_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->btc_address().data(), this->btc_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteWithdrawBtcRequest.btc_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->btc_address(), target);
  }

  // fixed64 satoshis = 3;
  if (this->satoshis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->satoshis(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteWithdrawBtcRequest)
  return target;
}

size_t SiteWithdrawBtcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteWithdrawBtcRequest)
  size_t total_size = 0;

  // string btc_address = 2;
  if (this->btc_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->btc_address());
  }

  // .oatot.SiteAuth site_auth = 1;
  if (this->has_site_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->site_auth_);
  }

  // fixed64 satoshis = 3;
  if (this->satoshis() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteWithdrawBtcRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteWithdrawBtcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteWithdrawBtcRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteWithdrawBtcRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteWithdrawBtcRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteWithdrawBtcRequest)
    MergeFrom(*source);
  }
}

void SiteWithdrawBtcRequest::MergeFrom(const SiteWithdrawBtcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteWithdrawBtcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.btc_address().size() > 0) {

    btc_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.btc_address_);
  }
  if (from.has_site_auth()) {
    mutable_site_auth()->::oatot::SiteAuth::MergeFrom(from.site_auth());
  }
  if (from.satoshis() != 0) {
    set_satoshis(from.satoshis());
  }
}

void SiteWithdrawBtcRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteWithdrawBtcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteWithdrawBtcRequest::CopyFrom(const SiteWithdrawBtcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteWithdrawBtcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteWithdrawBtcRequest::IsInitialized() const {
  return true;
}

void SiteWithdrawBtcRequest::Swap(SiteWithdrawBtcRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteWithdrawBtcRequest::InternalSwap(SiteWithdrawBtcRequest* other) {
  btc_address_.Swap(&other->btc_address_);
  std::swap(site_auth_, other->site_auth_);
  std::swap(satoshis_, other->satoshis_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteWithdrawBtcRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteWithdrawBtcRequest

// .oatot.SiteAuth site_auth = 1;
bool SiteWithdrawBtcRequest::has_site_auth() const {
  return this != internal_default_instance() && site_auth_ != NULL;
}
void SiteWithdrawBtcRequest::clear_site_auth() {
  if (GetArenaNoVirtual() == NULL && site_auth_ != NULL) delete site_auth_;
  site_auth_ = NULL;
}
const ::oatot::SiteAuth& SiteWithdrawBtcRequest::site_auth() const {
  // @@protoc_insertion_point(field_get:oatot.SiteWithdrawBtcRequest.site_auth)
  return site_auth_ != NULL ? *site_auth_
                         : *::oatot::SiteAuth::internal_default_instance();
}
::oatot::SiteAuth* SiteWithdrawBtcRequest::mutable_site_auth() {
  
  if (site_auth_ == NULL) {
    site_auth_ = new ::oatot::SiteAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.SiteWithdrawBtcRequest.site_auth)
  return site_auth_;
}
::oatot::SiteAuth* SiteWithdrawBtcRequest::release_site_auth() {
  // @@protoc_insertion_point(field_release:oatot.SiteWithdrawBtcRequest.site_auth)
  
  ::oatot::SiteAuth* temp = site_auth_;
  site_auth_ = NULL;
  return temp;
}
void SiteWithdrawBtcRequest::set_allocated_site_auth(::oatot::SiteAuth* site_auth) {
  delete site_auth_;
  site_auth_ = site_auth;
  if (site_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteWithdrawBtcRequest.site_auth)
}

// string btc_address = 2;
void SiteWithdrawBtcRequest::clear_btc_address() {
  btc_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteWithdrawBtcRequest::btc_address() const {
  // @@protoc_insertion_point(field_get:oatot.SiteWithdrawBtcRequest.btc_address)
  return btc_address_.GetNoArena();
}
void SiteWithdrawBtcRequest::set_btc_address(const ::std::string& value) {
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteWithdrawBtcRequest.btc_address)
}
#if LANG_CXX11
void SiteWithdrawBtcRequest::set_btc_address(::std::string&& value) {
  
  btc_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteWithdrawBtcRequest.btc_address)
}
#endif
void SiteWithdrawBtcRequest::set_btc_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteWithdrawBtcRequest.btc_address)
}
void SiteWithdrawBtcRequest::set_btc_address(const char* value, size_t size) {
  
  btc_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteWithdrawBtcRequest.btc_address)
}
::std::string* SiteWithdrawBtcRequest::mutable_btc_address() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteWithdrawBtcRequest.btc_address)
  return btc_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteWithdrawBtcRequest::release_btc_address() {
  // @@protoc_insertion_point(field_release:oatot.SiteWithdrawBtcRequest.btc_address)
  
  return btc_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteWithdrawBtcRequest::set_allocated_btc_address(::std::string* btc_address) {
  if (btc_address != NULL) {
    
  } else {
    
  }
  btc_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), btc_address);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteWithdrawBtcRequest.btc_address)
}

// fixed64 satoshis = 3;
void SiteWithdrawBtcRequest::clear_satoshis() {
  satoshis_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SiteWithdrawBtcRequest::satoshis() const {
  // @@protoc_insertion_point(field_get:oatot.SiteWithdrawBtcRequest.satoshis)
  return satoshis_;
}
void SiteWithdrawBtcRequest::set_satoshis(::google::protobuf::uint64 value) {
  
  satoshis_ = value;
  // @@protoc_insertion_point(field_set:oatot.SiteWithdrawBtcRequest.satoshis)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SiteWithdrawBtcResponse::kTxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SiteWithdrawBtcResponse::SiteWithdrawBtcResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SiteWithdrawBtcResponse)
}
SiteWithdrawBtcResponse::SiteWithdrawBtcResponse(const SiteWithdrawBtcResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tx().size() > 0) {
    tx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.SiteWithdrawBtcResponse)
}

void SiteWithdrawBtcResponse::SharedCtor() {
  tx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SiteWithdrawBtcResponse::~SiteWithdrawBtcResponse() {
  // @@protoc_insertion_point(destructor:oatot.SiteWithdrawBtcResponse)
  SharedDtor();
}

void SiteWithdrawBtcResponse::SharedDtor() {
  tx_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SiteWithdrawBtcResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SiteWithdrawBtcResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SiteWithdrawBtcResponse& SiteWithdrawBtcResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SiteWithdrawBtcResponse* SiteWithdrawBtcResponse::New(::google::protobuf::Arena* arena) const {
  SiteWithdrawBtcResponse* n = new SiteWithdrawBtcResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SiteWithdrawBtcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SiteWithdrawBtcResponse)
  tx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SiteWithdrawBtcResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SiteWithdrawBtcResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tx()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tx().data(), this->tx().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.SiteWithdrawBtcResponse.tx"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SiteWithdrawBtcResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SiteWithdrawBtcResponse)
  return false;
#undef DO_
}

void SiteWithdrawBtcResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SiteWithdrawBtcResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tx = 1;
  if (this->tx().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tx().data(), this->tx().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteWithdrawBtcResponse.tx");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tx(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SiteWithdrawBtcResponse)
}

::google::protobuf::uint8* SiteWithdrawBtcResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SiteWithdrawBtcResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tx = 1;
  if (this->tx().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tx().data(), this->tx().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.SiteWithdrawBtcResponse.tx");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tx(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SiteWithdrawBtcResponse)
  return target;
}

size_t SiteWithdrawBtcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SiteWithdrawBtcResponse)
  size_t total_size = 0;

  // string tx = 1;
  if (this->tx().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SiteWithdrawBtcResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SiteWithdrawBtcResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SiteWithdrawBtcResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SiteWithdrawBtcResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SiteWithdrawBtcResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SiteWithdrawBtcResponse)
    MergeFrom(*source);
  }
}

void SiteWithdrawBtcResponse::MergeFrom(const SiteWithdrawBtcResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SiteWithdrawBtcResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tx().size() > 0) {

    tx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_);
  }
}

void SiteWithdrawBtcResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SiteWithdrawBtcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SiteWithdrawBtcResponse::CopyFrom(const SiteWithdrawBtcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SiteWithdrawBtcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SiteWithdrawBtcResponse::IsInitialized() const {
  return true;
}

void SiteWithdrawBtcResponse::Swap(SiteWithdrawBtcResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SiteWithdrawBtcResponse::InternalSwap(SiteWithdrawBtcResponse* other) {
  tx_.Swap(&other->tx_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SiteWithdrawBtcResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SiteWithdrawBtcResponse

// string tx = 1;
void SiteWithdrawBtcResponse::clear_tx() {
  tx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SiteWithdrawBtcResponse::tx() const {
  // @@protoc_insertion_point(field_get:oatot.SiteWithdrawBtcResponse.tx)
  return tx_.GetNoArena();
}
void SiteWithdrawBtcResponse::set_tx(const ::std::string& value) {
  
  tx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.SiteWithdrawBtcResponse.tx)
}
#if LANG_CXX11
void SiteWithdrawBtcResponse::set_tx(::std::string&& value) {
  
  tx_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.SiteWithdrawBtcResponse.tx)
}
#endif
void SiteWithdrawBtcResponse::set_tx(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.SiteWithdrawBtcResponse.tx)
}
void SiteWithdrawBtcResponse::set_tx(const char* value, size_t size) {
  
  tx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.SiteWithdrawBtcResponse.tx)
}
::std::string* SiteWithdrawBtcResponse::mutable_tx() {
  
  // @@protoc_insertion_point(field_mutable:oatot.SiteWithdrawBtcResponse.tx)
  return tx_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SiteWithdrawBtcResponse::release_tx() {
  // @@protoc_insertion_point(field_release:oatot.SiteWithdrawBtcResponse.tx)
  
  return tx_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SiteWithdrawBtcResponse::set_allocated_tx(::std::string* tx) {
  if (tx != NULL) {
    
  } else {
    
  }
  tx_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tx);
  // @@protoc_insertion_point(field_set_allocated:oatot.SiteWithdrawBtcResponse.tx)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaBalanceRequest::kOaAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaBalanceRequest::OaBalanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaBalanceRequest)
}
OaBalanceRequest::OaBalanceRequest(const OaBalanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oa_auth()) {
    oa_auth_ = new ::oatot::OaAuth(*from.oa_auth_);
  } else {
    oa_auth_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.OaBalanceRequest)
}

void OaBalanceRequest::SharedCtor() {
  oa_auth_ = NULL;
  _cached_size_ = 0;
}

OaBalanceRequest::~OaBalanceRequest() {
  // @@protoc_insertion_point(destructor:oatot.OaBalanceRequest)
  SharedDtor();
}

void OaBalanceRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oa_auth_;
  }
}

void OaBalanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaBalanceRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaBalanceRequest& OaBalanceRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaBalanceRequest* OaBalanceRequest::New(::google::protobuf::Arena* arena) const {
  OaBalanceRequest* n = new OaBalanceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaBalanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaBalanceRequest)
  if (GetArenaNoVirtual() == NULL && oa_auth_ != NULL) {
    delete oa_auth_;
  }
  oa_auth_ = NULL;
}

bool OaBalanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaBalanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.OaAuth oa_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oa_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaBalanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaBalanceRequest)
  return false;
#undef DO_
}

void OaBalanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->oa_auth_, output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaBalanceRequest)
}

::google::protobuf::uint8* OaBalanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->oa_auth_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaBalanceRequest)
  return target;
}

size_t OaBalanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaBalanceRequest)
  size_t total_size = 0;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oa_auth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaBalanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OaBalanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaBalanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaBalanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaBalanceRequest)
    MergeFrom(*source);
  }
}

void OaBalanceRequest::MergeFrom(const OaBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_oa_auth()) {
    mutable_oa_auth()->::oatot::OaAuth::MergeFrom(from.oa_auth());
  }
}

void OaBalanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaBalanceRequest::CopyFrom(const OaBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaBalanceRequest::IsInitialized() const {
  return true;
}

void OaBalanceRequest::Swap(OaBalanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaBalanceRequest::InternalSwap(OaBalanceRequest* other) {
  std::swap(oa_auth_, other->oa_auth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaBalanceRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaBalanceRequest

// .oatot.OaAuth oa_auth = 1;
bool OaBalanceRequest::has_oa_auth() const {
  return this != internal_default_instance() && oa_auth_ != NULL;
}
void OaBalanceRequest::clear_oa_auth() {
  if (GetArenaNoVirtual() == NULL && oa_auth_ != NULL) delete oa_auth_;
  oa_auth_ = NULL;
}
const ::oatot::OaAuth& OaBalanceRequest::oa_auth() const {
  // @@protoc_insertion_point(field_get:oatot.OaBalanceRequest.oa_auth)
  return oa_auth_ != NULL ? *oa_auth_
                         : *::oatot::OaAuth::internal_default_instance();
}
::oatot::OaAuth* OaBalanceRequest::mutable_oa_auth() {
  
  if (oa_auth_ == NULL) {
    oa_auth_ = new ::oatot::OaAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.OaBalanceRequest.oa_auth)
  return oa_auth_;
}
::oatot::OaAuth* OaBalanceRequest::release_oa_auth() {
  // @@protoc_insertion_point(field_release:oatot.OaBalanceRequest.oa_auth)
  
  ::oatot::OaAuth* temp = oa_auth_;
  oa_auth_ = NULL;
  return temp;
}
void OaBalanceRequest::set_allocated_oa_auth(::oatot::OaAuth* oa_auth) {
  delete oa_auth_;
  oa_auth_ = oa_auth;
  if (oa_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.OaBalanceRequest.oa_auth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaBalanceResponse::kFreeSatoshisFieldNumber;
const int OaBalanceResponse::kSatoshisOnBidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaBalanceResponse::OaBalanceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaBalanceResponse)
}
OaBalanceResponse::OaBalanceResponse(const OaBalanceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&free_satoshis_, &from.free_satoshis_,
    reinterpret_cast<char*>(&satoshis_on_bids_) -
    reinterpret_cast<char*>(&free_satoshis_) + sizeof(satoshis_on_bids_));
  // @@protoc_insertion_point(copy_constructor:oatot.OaBalanceResponse)
}

void OaBalanceResponse::SharedCtor() {
  ::memset(&free_satoshis_, 0, reinterpret_cast<char*>(&satoshis_on_bids_) -
    reinterpret_cast<char*>(&free_satoshis_) + sizeof(satoshis_on_bids_));
  _cached_size_ = 0;
}

OaBalanceResponse::~OaBalanceResponse() {
  // @@protoc_insertion_point(destructor:oatot.OaBalanceResponse)
  SharedDtor();
}

void OaBalanceResponse::SharedDtor() {
}

void OaBalanceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaBalanceResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaBalanceResponse& OaBalanceResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaBalanceResponse* OaBalanceResponse::New(::google::protobuf::Arena* arena) const {
  OaBalanceResponse* n = new OaBalanceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaBalanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaBalanceResponse)
  ::memset(&free_satoshis_, 0, reinterpret_cast<char*>(&satoshis_on_bids_) -
    reinterpret_cast<char*>(&free_satoshis_) + sizeof(satoshis_on_bids_));
}

bool OaBalanceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaBalanceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 free_satoshis = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &free_satoshis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 satoshis_on_bids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &satoshis_on_bids_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaBalanceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaBalanceResponse)
  return false;
#undef DO_
}

void OaBalanceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 free_satoshis = 1;
  if (this->free_satoshis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->free_satoshis(), output);
  }

  // fixed64 satoshis_on_bids = 2;
  if (this->satoshis_on_bids() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->satoshis_on_bids(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaBalanceResponse)
}

::google::protobuf::uint8* OaBalanceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 free_satoshis = 1;
  if (this->free_satoshis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->free_satoshis(), target);
  }

  // fixed64 satoshis_on_bids = 2;
  if (this->satoshis_on_bids() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->satoshis_on_bids(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaBalanceResponse)
  return target;
}

size_t OaBalanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaBalanceResponse)
  size_t total_size = 0;

  // fixed64 free_satoshis = 1;
  if (this->free_satoshis() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 satoshis_on_bids = 2;
  if (this->satoshis_on_bids() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaBalanceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OaBalanceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaBalanceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaBalanceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaBalanceResponse)
    MergeFrom(*source);
  }
}

void OaBalanceResponse::MergeFrom(const OaBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.free_satoshis() != 0) {
    set_free_satoshis(from.free_satoshis());
  }
  if (from.satoshis_on_bids() != 0) {
    set_satoshis_on_bids(from.satoshis_on_bids());
  }
}

void OaBalanceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaBalanceResponse::CopyFrom(const OaBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaBalanceResponse::IsInitialized() const {
  return true;
}

void OaBalanceResponse::Swap(OaBalanceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaBalanceResponse::InternalSwap(OaBalanceResponse* other) {
  std::swap(free_satoshis_, other->free_satoshis_);
  std::swap(satoshis_on_bids_, other->satoshis_on_bids_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaBalanceResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaBalanceResponse

// fixed64 free_satoshis = 1;
void OaBalanceResponse::clear_free_satoshis() {
  free_satoshis_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OaBalanceResponse::free_satoshis() const {
  // @@protoc_insertion_point(field_get:oatot.OaBalanceResponse.free_satoshis)
  return free_satoshis_;
}
void OaBalanceResponse::set_free_satoshis(::google::protobuf::uint64 value) {
  
  free_satoshis_ = value;
  // @@protoc_insertion_point(field_set:oatot.OaBalanceResponse.free_satoshis)
}

// fixed64 satoshis_on_bids = 2;
void OaBalanceResponse::clear_satoshis_on_bids() {
  satoshis_on_bids_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OaBalanceResponse::satoshis_on_bids() const {
  // @@protoc_insertion_point(field_get:oatot.OaBalanceResponse.satoshis_on_bids)
  return satoshis_on_bids_;
}
void OaBalanceResponse::set_satoshis_on_bids(::google::protobuf::uint64 value) {
  
  satoshis_on_bids_ = value;
  // @@protoc_insertion_point(field_set:oatot.OaBalanceResponse.satoshis_on_bids)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bid::kHorseFieldNumber;
const int Bid::kSatoshisFieldNumber;
const int Bid::kOpenTimeFieldNumber;
const int Bid::kCloseTimeFieldNumber;
const int Bid::kWinnerFieldNumber;
const int Bid::kPrizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bid::Bid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.Bid)
}
Bid::Bid(const Bid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  horse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.horse().size() > 0) {
    horse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.horse_);
  }
  winner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.winner().size() > 0) {
    winner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winner_);
  }
  if (from.has_open_time()) {
    open_time_ = new ::google::protobuf::Timestamp(*from.open_time_);
  } else {
    open_time_ = NULL;
  }
  if (from.has_close_time()) {
    close_time_ = new ::google::protobuf::Timestamp(*from.close_time_);
  } else {
    close_time_ = NULL;
  }
  ::memcpy(&satoshis_, &from.satoshis_,
    reinterpret_cast<char*>(&prize_) -
    reinterpret_cast<char*>(&satoshis_) + sizeof(prize_));
  // @@protoc_insertion_point(copy_constructor:oatot.Bid)
}

void Bid::SharedCtor() {
  horse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&open_time_, 0, reinterpret_cast<char*>(&prize_) -
    reinterpret_cast<char*>(&open_time_) + sizeof(prize_));
  _cached_size_ = 0;
}

Bid::~Bid() {
  // @@protoc_insertion_point(destructor:oatot.Bid)
  SharedDtor();
}

void Bid::SharedDtor() {
  horse_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete open_time_;
  }
  if (this != internal_default_instance()) {
    delete close_time_;
  }
}

void Bid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bid::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bid& Bid::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bid* Bid::New(::google::protobuf::Arena* arena) const {
  Bid* n = new Bid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bid::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.Bid)
  horse_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  winner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && open_time_ != NULL) {
    delete open_time_;
  }
  open_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && close_time_ != NULL) {
    delete close_time_;
  }
  close_time_ = NULL;
  ::memset(&satoshis_, 0, reinterpret_cast<char*>(&prize_) -
    reinterpret_cast<char*>(&satoshis_) + sizeof(prize_));
}

bool Bid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.Bid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string horse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_horse()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->horse().data(), this->horse().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.Bid.horse"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 satoshis = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &satoshis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp open_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_open_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp close_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_close_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string winner = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_winner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->winner().data(), this->winner().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.Bid.winner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 prize = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &prize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.Bid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.Bid)
  return false;
#undef DO_
}

void Bid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.Bid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string horse = 1;
  if (this->horse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->horse().data(), this->horse().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.Bid.horse");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->horse(), output);
  }

  // fixed64 satoshis = 2;
  if (this->satoshis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->satoshis(), output);
  }

  // .google.protobuf.Timestamp open_time = 3;
  if (this->has_open_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->open_time_, output);
  }

  // .google.protobuf.Timestamp close_time = 4;
  if (this->has_close_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->close_time_, output);
  }

  // string winner = 5;
  if (this->winner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->winner().data(), this->winner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.Bid.winner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->winner(), output);
  }

  // fixed64 prize = 6;
  if (this->prize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(6, this->prize(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.Bid)
}

::google::protobuf::uint8* Bid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.Bid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string horse = 1;
  if (this->horse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->horse().data(), this->horse().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.Bid.horse");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->horse(), target);
  }

  // fixed64 satoshis = 2;
  if (this->satoshis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->satoshis(), target);
  }

  // .google.protobuf.Timestamp open_time = 3;
  if (this->has_open_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->open_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp close_time = 4;
  if (this->has_close_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->close_time_, deterministic, target);
  }

  // string winner = 5;
  if (this->winner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->winner().data(), this->winner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.Bid.winner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->winner(), target);
  }

  // fixed64 prize = 6;
  if (this->prize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(6, this->prize(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.Bid)
  return target;
}

size_t Bid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.Bid)
  size_t total_size = 0;

  // string horse = 1;
  if (this->horse().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->horse());
  }

  // string winner = 5;
  if (this->winner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->winner());
  }

  // .google.protobuf.Timestamp open_time = 3;
  if (this->has_open_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->open_time_);
  }

  // .google.protobuf.Timestamp close_time = 4;
  if (this->has_close_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->close_time_);
  }

  // fixed64 satoshis = 2;
  if (this->satoshis() != 0) {
    total_size += 1 + 8;
  }

  // fixed64 prize = 6;
  if (this->prize() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.Bid)
  GOOGLE_DCHECK_NE(&from, this);
  const Bid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.Bid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.Bid)
    MergeFrom(*source);
  }
}

void Bid::MergeFrom(const Bid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.Bid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.horse().size() > 0) {

    horse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.horse_);
  }
  if (from.winner().size() > 0) {

    winner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.winner_);
  }
  if (from.has_open_time()) {
    mutable_open_time()->::google::protobuf::Timestamp::MergeFrom(from.open_time());
  }
  if (from.has_close_time()) {
    mutable_close_time()->::google::protobuf::Timestamp::MergeFrom(from.close_time());
  }
  if (from.satoshis() != 0) {
    set_satoshis(from.satoshis());
  }
  if (from.prize() != 0) {
    set_prize(from.prize());
  }
}

void Bid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.Bid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bid::CopyFrom(const Bid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.Bid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bid::IsInitialized() const {
  return true;
}

void Bid::Swap(Bid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bid::InternalSwap(Bid* other) {
  horse_.Swap(&other->horse_);
  winner_.Swap(&other->winner_);
  std::swap(open_time_, other->open_time_);
  std::swap(close_time_, other->close_time_);
  std::swap(satoshis_, other->satoshis_);
  std::swap(prize_, other->prize_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bid::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bid

// string horse = 1;
void Bid::clear_horse() {
  horse_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Bid::horse() const {
  // @@protoc_insertion_point(field_get:oatot.Bid.horse)
  return horse_.GetNoArena();
}
void Bid::set_horse(const ::std::string& value) {
  
  horse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.Bid.horse)
}
#if LANG_CXX11
void Bid::set_horse(::std::string&& value) {
  
  horse_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.Bid.horse)
}
#endif
void Bid::set_horse(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  horse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.Bid.horse)
}
void Bid::set_horse(const char* value, size_t size) {
  
  horse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.Bid.horse)
}
::std::string* Bid::mutable_horse() {
  
  // @@protoc_insertion_point(field_mutable:oatot.Bid.horse)
  return horse_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Bid::release_horse() {
  // @@protoc_insertion_point(field_release:oatot.Bid.horse)
  
  return horse_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Bid::set_allocated_horse(::std::string* horse) {
  if (horse != NULL) {
    
  } else {
    
  }
  horse_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), horse);
  // @@protoc_insertion_point(field_set_allocated:oatot.Bid.horse)
}

// fixed64 satoshis = 2;
void Bid::clear_satoshis() {
  satoshis_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Bid::satoshis() const {
  // @@protoc_insertion_point(field_get:oatot.Bid.satoshis)
  return satoshis_;
}
void Bid::set_satoshis(::google::protobuf::uint64 value) {
  
  satoshis_ = value;
  // @@protoc_insertion_point(field_set:oatot.Bid.satoshis)
}

// .google.protobuf.Timestamp open_time = 3;
bool Bid::has_open_time() const {
  return this != internal_default_instance() && open_time_ != NULL;
}
void Bid::clear_open_time() {
  if (GetArenaNoVirtual() == NULL && open_time_ != NULL) delete open_time_;
  open_time_ = NULL;
}
const ::google::protobuf::Timestamp& Bid::open_time() const {
  // @@protoc_insertion_point(field_get:oatot.Bid.open_time)
  return open_time_ != NULL ? *open_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Bid::mutable_open_time() {
  
  if (open_time_ == NULL) {
    open_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:oatot.Bid.open_time)
  return open_time_;
}
::google::protobuf::Timestamp* Bid::release_open_time() {
  // @@protoc_insertion_point(field_release:oatot.Bid.open_time)
  
  ::google::protobuf::Timestamp* temp = open_time_;
  open_time_ = NULL;
  return temp;
}
void Bid::set_allocated_open_time(::google::protobuf::Timestamp* open_time) {
  delete open_time_;
  if (open_time != NULL && open_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_open_time = new ::google::protobuf::Timestamp;
    new_open_time->CopyFrom(*open_time);
    open_time = new_open_time;
  }
  open_time_ = open_time;
  if (open_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.Bid.open_time)
}

// .google.protobuf.Timestamp close_time = 4;
bool Bid::has_close_time() const {
  return this != internal_default_instance() && close_time_ != NULL;
}
void Bid::clear_close_time() {
  if (GetArenaNoVirtual() == NULL && close_time_ != NULL) delete close_time_;
  close_time_ = NULL;
}
const ::google::protobuf::Timestamp& Bid::close_time() const {
  // @@protoc_insertion_point(field_get:oatot.Bid.close_time)
  return close_time_ != NULL ? *close_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Bid::mutable_close_time() {
  
  if (close_time_ == NULL) {
    close_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:oatot.Bid.close_time)
  return close_time_;
}
::google::protobuf::Timestamp* Bid::release_close_time() {
  // @@protoc_insertion_point(field_release:oatot.Bid.close_time)
  
  ::google::protobuf::Timestamp* temp = close_time_;
  close_time_ = NULL;
  return temp;
}
void Bid::set_allocated_close_time(::google::protobuf::Timestamp* close_time) {
  delete close_time_;
  if (close_time != NULL && close_time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_close_time = new ::google::protobuf::Timestamp;
    new_close_time->CopyFrom(*close_time);
    close_time = new_close_time;
  }
  close_time_ = close_time;
  if (close_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.Bid.close_time)
}

// string winner = 5;
void Bid::clear_winner() {
  winner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Bid::winner() const {
  // @@protoc_insertion_point(field_get:oatot.Bid.winner)
  return winner_.GetNoArena();
}
void Bid::set_winner(const ::std::string& value) {
  
  winner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.Bid.winner)
}
#if LANG_CXX11
void Bid::set_winner(::std::string&& value) {
  
  winner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.Bid.winner)
}
#endif
void Bid::set_winner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  winner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.Bid.winner)
}
void Bid::set_winner(const char* value, size_t size) {
  
  winner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.Bid.winner)
}
::std::string* Bid::mutable_winner() {
  
  // @@protoc_insertion_point(field_mutable:oatot.Bid.winner)
  return winner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Bid::release_winner() {
  // @@protoc_insertion_point(field_release:oatot.Bid.winner)
  
  return winner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Bid::set_allocated_winner(::std::string* winner) {
  if (winner != NULL) {
    
  } else {
    
  }
  winner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), winner);
  // @@protoc_insertion_point(field_set_allocated:oatot.Bid.winner)
}

// fixed64 prize = 6;
void Bid::clear_prize() {
  prize_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Bid::prize() const {
  // @@protoc_insertion_point(field_get:oatot.Bid.prize)
  return prize_;
}
void Bid::set_prize(::google::protobuf::uint64 value) {
  
  prize_ = value;
  // @@protoc_insertion_point(field_set:oatot.Bid.prize)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaBidRequest::kOaAuthFieldNumber;
const int OaBidRequest::kBidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaBidRequest::OaBidRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaBidRequest)
}
OaBidRequest::OaBidRequest(const OaBidRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oa_auth()) {
    oa_auth_ = new ::oatot::OaAuth(*from.oa_auth_);
  } else {
    oa_auth_ = NULL;
  }
  if (from.has_bid()) {
    bid_ = new ::oatot::Bid(*from.bid_);
  } else {
    bid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.OaBidRequest)
}

void OaBidRequest::SharedCtor() {
  ::memset(&oa_auth_, 0, reinterpret_cast<char*>(&bid_) -
    reinterpret_cast<char*>(&oa_auth_) + sizeof(bid_));
  _cached_size_ = 0;
}

OaBidRequest::~OaBidRequest() {
  // @@protoc_insertion_point(destructor:oatot.OaBidRequest)
  SharedDtor();
}

void OaBidRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oa_auth_;
  }
  if (this != internal_default_instance()) {
    delete bid_;
  }
}

void OaBidRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaBidRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaBidRequest& OaBidRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaBidRequest* OaBidRequest::New(::google::protobuf::Arena* arena) const {
  OaBidRequest* n = new OaBidRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaBidRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaBidRequest)
  if (GetArenaNoVirtual() == NULL && oa_auth_ != NULL) {
    delete oa_auth_;
  }
  oa_auth_ = NULL;
  if (GetArenaNoVirtual() == NULL && bid_ != NULL) {
    delete bid_;
  }
  bid_ = NULL;
}

bool OaBidRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaBidRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.OaAuth oa_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oa_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .oatot.Bid bid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaBidRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaBidRequest)
  return false;
#undef DO_
}

void OaBidRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaBidRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->oa_auth_, output);
  }

  // .oatot.Bid bid = 2;
  if (this->has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bid_, output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaBidRequest)
}

::google::protobuf::uint8* OaBidRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaBidRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->oa_auth_, deterministic, target);
  }

  // .oatot.Bid bid = 2;
  if (this->has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->bid_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaBidRequest)
  return target;
}

size_t OaBidRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaBidRequest)
  size_t total_size = 0;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oa_auth_);
  }

  // .oatot.Bid bid = 2;
  if (this->has_bid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaBidRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaBidRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OaBidRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaBidRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaBidRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaBidRequest)
    MergeFrom(*source);
  }
}

void OaBidRequest::MergeFrom(const OaBidRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaBidRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_oa_auth()) {
    mutable_oa_auth()->::oatot::OaAuth::MergeFrom(from.oa_auth());
  }
  if (from.has_bid()) {
    mutable_bid()->::oatot::Bid::MergeFrom(from.bid());
  }
}

void OaBidRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaBidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaBidRequest::CopyFrom(const OaBidRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaBidRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaBidRequest::IsInitialized() const {
  return true;
}

void OaBidRequest::Swap(OaBidRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaBidRequest::InternalSwap(OaBidRequest* other) {
  std::swap(oa_auth_, other->oa_auth_);
  std::swap(bid_, other->bid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaBidRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaBidRequest

// .oatot.OaAuth oa_auth = 1;
bool OaBidRequest::has_oa_auth() const {
  return this != internal_default_instance() && oa_auth_ != NULL;
}
void OaBidRequest::clear_oa_auth() {
  if (GetArenaNoVirtual() == NULL && oa_auth_ != NULL) delete oa_auth_;
  oa_auth_ = NULL;
}
const ::oatot::OaAuth& OaBidRequest::oa_auth() const {
  // @@protoc_insertion_point(field_get:oatot.OaBidRequest.oa_auth)
  return oa_auth_ != NULL ? *oa_auth_
                         : *::oatot::OaAuth::internal_default_instance();
}
::oatot::OaAuth* OaBidRequest::mutable_oa_auth() {
  
  if (oa_auth_ == NULL) {
    oa_auth_ = new ::oatot::OaAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.OaBidRequest.oa_auth)
  return oa_auth_;
}
::oatot::OaAuth* OaBidRequest::release_oa_auth() {
  // @@protoc_insertion_point(field_release:oatot.OaBidRequest.oa_auth)
  
  ::oatot::OaAuth* temp = oa_auth_;
  oa_auth_ = NULL;
  return temp;
}
void OaBidRequest::set_allocated_oa_auth(::oatot::OaAuth* oa_auth) {
  delete oa_auth_;
  oa_auth_ = oa_auth;
  if (oa_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.OaBidRequest.oa_auth)
}

// .oatot.Bid bid = 2;
bool OaBidRequest::has_bid() const {
  return this != internal_default_instance() && bid_ != NULL;
}
void OaBidRequest::clear_bid() {
  if (GetArenaNoVirtual() == NULL && bid_ != NULL) delete bid_;
  bid_ = NULL;
}
const ::oatot::Bid& OaBidRequest::bid() const {
  // @@protoc_insertion_point(field_get:oatot.OaBidRequest.bid)
  return bid_ != NULL ? *bid_
                         : *::oatot::Bid::internal_default_instance();
}
::oatot::Bid* OaBidRequest::mutable_bid() {
  
  if (bid_ == NULL) {
    bid_ = new ::oatot::Bid;
  }
  // @@protoc_insertion_point(field_mutable:oatot.OaBidRequest.bid)
  return bid_;
}
::oatot::Bid* OaBidRequest::release_bid() {
  // @@protoc_insertion_point(field_release:oatot.OaBidRequest.bid)
  
  ::oatot::Bid* temp = bid_;
  bid_ = NULL;
  return temp;
}
void OaBidRequest::set_allocated_bid(::oatot::Bid* bid) {
  delete bid_;
  bid_ = bid;
  if (bid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.OaBidRequest.bid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaBidResponse::OaBidResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaBidResponse)
}
OaBidResponse::OaBidResponse(const OaBidResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oatot.OaBidResponse)
}

void OaBidResponse::SharedCtor() {
  _cached_size_ = 0;
}

OaBidResponse::~OaBidResponse() {
  // @@protoc_insertion_point(destructor:oatot.OaBidResponse)
  SharedDtor();
}

void OaBidResponse::SharedDtor() {
}

void OaBidResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaBidResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaBidResponse& OaBidResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaBidResponse* OaBidResponse::New(::google::protobuf::Arena* arena) const {
  OaBidResponse* n = new OaBidResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaBidResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaBidResponse)
}

bool OaBidResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaBidResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaBidResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaBidResponse)
  return false;
#undef DO_
}

void OaBidResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaBidResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:oatot.OaBidResponse)
}

::google::protobuf::uint8* OaBidResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaBidResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaBidResponse)
  return target;
}

size_t OaBidResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaBidResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaBidResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaBidResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OaBidResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaBidResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaBidResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaBidResponse)
    MergeFrom(*source);
  }
}

void OaBidResponse::MergeFrom(const OaBidResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaBidResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OaBidResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaBidResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaBidResponse::CopyFrom(const OaBidResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaBidResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaBidResponse::IsInitialized() const {
  return true;
}

void OaBidResponse::Swap(OaBidResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaBidResponse::InternalSwap(OaBidResponse* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaBidResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaBidResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaMyActiveBidsRequest::kOaAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaMyActiveBidsRequest::OaMyActiveBidsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaMyActiveBidsRequest)
}
OaMyActiveBidsRequest::OaMyActiveBidsRequest(const OaMyActiveBidsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oa_auth()) {
    oa_auth_ = new ::oatot::OaAuth(*from.oa_auth_);
  } else {
    oa_auth_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.OaMyActiveBidsRequest)
}

void OaMyActiveBidsRequest::SharedCtor() {
  oa_auth_ = NULL;
  _cached_size_ = 0;
}

OaMyActiveBidsRequest::~OaMyActiveBidsRequest() {
  // @@protoc_insertion_point(destructor:oatot.OaMyActiveBidsRequest)
  SharedDtor();
}

void OaMyActiveBidsRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oa_auth_;
  }
}

void OaMyActiveBidsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaMyActiveBidsRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaMyActiveBidsRequest& OaMyActiveBidsRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaMyActiveBidsRequest* OaMyActiveBidsRequest::New(::google::protobuf::Arena* arena) const {
  OaMyActiveBidsRequest* n = new OaMyActiveBidsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaMyActiveBidsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaMyActiveBidsRequest)
  if (GetArenaNoVirtual() == NULL && oa_auth_ != NULL) {
    delete oa_auth_;
  }
  oa_auth_ = NULL;
}

bool OaMyActiveBidsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaMyActiveBidsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.OaAuth oa_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oa_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaMyActiveBidsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaMyActiveBidsRequest)
  return false;
#undef DO_
}

void OaMyActiveBidsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaMyActiveBidsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->oa_auth_, output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaMyActiveBidsRequest)
}

::google::protobuf::uint8* OaMyActiveBidsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaMyActiveBidsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->oa_auth_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaMyActiveBidsRequest)
  return target;
}

size_t OaMyActiveBidsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaMyActiveBidsRequest)
  size_t total_size = 0;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oa_auth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaMyActiveBidsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaMyActiveBidsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OaMyActiveBidsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaMyActiveBidsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaMyActiveBidsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaMyActiveBidsRequest)
    MergeFrom(*source);
  }
}

void OaMyActiveBidsRequest::MergeFrom(const OaMyActiveBidsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaMyActiveBidsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_oa_auth()) {
    mutable_oa_auth()->::oatot::OaAuth::MergeFrom(from.oa_auth());
  }
}

void OaMyActiveBidsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaMyActiveBidsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaMyActiveBidsRequest::CopyFrom(const OaMyActiveBidsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaMyActiveBidsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaMyActiveBidsRequest::IsInitialized() const {
  return true;
}

void OaMyActiveBidsRequest::Swap(OaMyActiveBidsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaMyActiveBidsRequest::InternalSwap(OaMyActiveBidsRequest* other) {
  std::swap(oa_auth_, other->oa_auth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaMyActiveBidsRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaMyActiveBidsRequest

// .oatot.OaAuth oa_auth = 1;
bool OaMyActiveBidsRequest::has_oa_auth() const {
  return this != internal_default_instance() && oa_auth_ != NULL;
}
void OaMyActiveBidsRequest::clear_oa_auth() {
  if (GetArenaNoVirtual() == NULL && oa_auth_ != NULL) delete oa_auth_;
  oa_auth_ = NULL;
}
const ::oatot::OaAuth& OaMyActiveBidsRequest::oa_auth() const {
  // @@protoc_insertion_point(field_get:oatot.OaMyActiveBidsRequest.oa_auth)
  return oa_auth_ != NULL ? *oa_auth_
                         : *::oatot::OaAuth::internal_default_instance();
}
::oatot::OaAuth* OaMyActiveBidsRequest::mutable_oa_auth() {
  
  if (oa_auth_ == NULL) {
    oa_auth_ = new ::oatot::OaAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.OaMyActiveBidsRequest.oa_auth)
  return oa_auth_;
}
::oatot::OaAuth* OaMyActiveBidsRequest::release_oa_auth() {
  // @@protoc_insertion_point(field_release:oatot.OaMyActiveBidsRequest.oa_auth)
  
  ::oatot::OaAuth* temp = oa_auth_;
  oa_auth_ = NULL;
  return temp;
}
void OaMyActiveBidsRequest::set_allocated_oa_auth(::oatot::OaAuth* oa_auth) {
  delete oa_auth_;
  oa_auth_ = oa_auth;
  if (oa_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.OaMyActiveBidsRequest.oa_auth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaMyActiveBidsResponse::kBidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaMyActiveBidsResponse::OaMyActiveBidsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaMyActiveBidsResponse)
}
OaMyActiveBidsResponse::OaMyActiveBidsResponse(const OaMyActiveBidsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bids_(from.bids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oatot.OaMyActiveBidsResponse)
}

void OaMyActiveBidsResponse::SharedCtor() {
  _cached_size_ = 0;
}

OaMyActiveBidsResponse::~OaMyActiveBidsResponse() {
  // @@protoc_insertion_point(destructor:oatot.OaMyActiveBidsResponse)
  SharedDtor();
}

void OaMyActiveBidsResponse::SharedDtor() {
}

void OaMyActiveBidsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaMyActiveBidsResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaMyActiveBidsResponse& OaMyActiveBidsResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaMyActiveBidsResponse* OaMyActiveBidsResponse::New(::google::protobuf::Arena* arena) const {
  OaMyActiveBidsResponse* n = new OaMyActiveBidsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaMyActiveBidsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaMyActiveBidsResponse)
  bids_.Clear();
}

bool OaMyActiveBidsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaMyActiveBidsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .oatot.Bid bids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaMyActiveBidsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaMyActiveBidsResponse)
  return false;
#undef DO_
}

void OaMyActiveBidsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaMyActiveBidsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Bid bids = 1;
  for (unsigned int i = 0, n = this->bids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaMyActiveBidsResponse)
}

::google::protobuf::uint8* OaMyActiveBidsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaMyActiveBidsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Bid bids = 1;
  for (unsigned int i = 0, n = this->bids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->bids(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaMyActiveBidsResponse)
  return target;
}

size_t OaMyActiveBidsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaMyActiveBidsResponse)
  size_t total_size = 0;

  // repeated .oatot.Bid bids = 1;
  {
    unsigned int count = this->bids_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bids(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaMyActiveBidsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaMyActiveBidsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OaMyActiveBidsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaMyActiveBidsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaMyActiveBidsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaMyActiveBidsResponse)
    MergeFrom(*source);
  }
}

void OaMyActiveBidsResponse::MergeFrom(const OaMyActiveBidsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaMyActiveBidsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bids_.MergeFrom(from.bids_);
}

void OaMyActiveBidsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaMyActiveBidsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaMyActiveBidsResponse::CopyFrom(const OaMyActiveBidsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaMyActiveBidsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaMyActiveBidsResponse::IsInitialized() const {
  return true;
}

void OaMyActiveBidsResponse::Swap(OaMyActiveBidsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaMyActiveBidsResponse::InternalSwap(OaMyActiveBidsResponse* other) {
  bids_.InternalSwap(&other->bids_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaMyActiveBidsResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaMyActiveBidsResponse

// repeated .oatot.Bid bids = 1;
int OaMyActiveBidsResponse::bids_size() const {
  return bids_.size();
}
void OaMyActiveBidsResponse::clear_bids() {
  bids_.Clear();
}
const ::oatot::Bid& OaMyActiveBidsResponse::bids(int index) const {
  // @@protoc_insertion_point(field_get:oatot.OaMyActiveBidsResponse.bids)
  return bids_.Get(index);
}
::oatot::Bid* OaMyActiveBidsResponse::mutable_bids(int index) {
  // @@protoc_insertion_point(field_mutable:oatot.OaMyActiveBidsResponse.bids)
  return bids_.Mutable(index);
}
::oatot::Bid* OaMyActiveBidsResponse::add_bids() {
  // @@protoc_insertion_point(field_add:oatot.OaMyActiveBidsResponse.bids)
  return bids_.Add();
}
::google::protobuf::RepeatedPtrField< ::oatot::Bid >*
OaMyActiveBidsResponse::mutable_bids() {
  // @@protoc_insertion_point(field_mutable_list:oatot.OaMyActiveBidsResponse.bids)
  return &bids_;
}
const ::google::protobuf::RepeatedPtrField< ::oatot::Bid >&
OaMyActiveBidsResponse::bids() const {
  // @@protoc_insertion_point(field_list:oatot.OaMyActiveBidsResponse.bids)
  return bids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaActiveBidsSummaryRequest::kOaAuthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaActiveBidsSummaryRequest::OaActiveBidsSummaryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaActiveBidsSummaryRequest)
}
OaActiveBidsSummaryRequest::OaActiveBidsSummaryRequest(const OaActiveBidsSummaryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oa_auth()) {
    oa_auth_ = new ::oatot::OaAuth(*from.oa_auth_);
  } else {
    oa_auth_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.OaActiveBidsSummaryRequest)
}

void OaActiveBidsSummaryRequest::SharedCtor() {
  oa_auth_ = NULL;
  _cached_size_ = 0;
}

OaActiveBidsSummaryRequest::~OaActiveBidsSummaryRequest() {
  // @@protoc_insertion_point(destructor:oatot.OaActiveBidsSummaryRequest)
  SharedDtor();
}

void OaActiveBidsSummaryRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oa_auth_;
  }
}

void OaActiveBidsSummaryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaActiveBidsSummaryRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaActiveBidsSummaryRequest& OaActiveBidsSummaryRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaActiveBidsSummaryRequest* OaActiveBidsSummaryRequest::New(::google::protobuf::Arena* arena) const {
  OaActiveBidsSummaryRequest* n = new OaActiveBidsSummaryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaActiveBidsSummaryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaActiveBidsSummaryRequest)
  if (GetArenaNoVirtual() == NULL && oa_auth_ != NULL) {
    delete oa_auth_;
  }
  oa_auth_ = NULL;
}

bool OaActiveBidsSummaryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaActiveBidsSummaryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.OaAuth oa_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oa_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaActiveBidsSummaryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaActiveBidsSummaryRequest)
  return false;
#undef DO_
}

void OaActiveBidsSummaryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaActiveBidsSummaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->oa_auth_, output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaActiveBidsSummaryRequest)
}

::google::protobuf::uint8* OaActiveBidsSummaryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaActiveBidsSummaryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->oa_auth_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaActiveBidsSummaryRequest)
  return target;
}

size_t OaActiveBidsSummaryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaActiveBidsSummaryRequest)
  size_t total_size = 0;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oa_auth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaActiveBidsSummaryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaActiveBidsSummaryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OaActiveBidsSummaryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaActiveBidsSummaryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaActiveBidsSummaryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaActiveBidsSummaryRequest)
    MergeFrom(*source);
  }
}

void OaActiveBidsSummaryRequest::MergeFrom(const OaActiveBidsSummaryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaActiveBidsSummaryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_oa_auth()) {
    mutable_oa_auth()->::oatot::OaAuth::MergeFrom(from.oa_auth());
  }
}

void OaActiveBidsSummaryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaActiveBidsSummaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaActiveBidsSummaryRequest::CopyFrom(const OaActiveBidsSummaryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaActiveBidsSummaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaActiveBidsSummaryRequest::IsInitialized() const {
  return true;
}

void OaActiveBidsSummaryRequest::Swap(OaActiveBidsSummaryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaActiveBidsSummaryRequest::InternalSwap(OaActiveBidsSummaryRequest* other) {
  std::swap(oa_auth_, other->oa_auth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaActiveBidsSummaryRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaActiveBidsSummaryRequest

// .oatot.OaAuth oa_auth = 1;
bool OaActiveBidsSummaryRequest::has_oa_auth() const {
  return this != internal_default_instance() && oa_auth_ != NULL;
}
void OaActiveBidsSummaryRequest::clear_oa_auth() {
  if (GetArenaNoVirtual() == NULL && oa_auth_ != NULL) delete oa_auth_;
  oa_auth_ = NULL;
}
const ::oatot::OaAuth& OaActiveBidsSummaryRequest::oa_auth() const {
  // @@protoc_insertion_point(field_get:oatot.OaActiveBidsSummaryRequest.oa_auth)
  return oa_auth_ != NULL ? *oa_auth_
                         : *::oatot::OaAuth::internal_default_instance();
}
::oatot::OaAuth* OaActiveBidsSummaryRequest::mutable_oa_auth() {
  
  if (oa_auth_ == NULL) {
    oa_auth_ = new ::oatot::OaAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.OaActiveBidsSummaryRequest.oa_auth)
  return oa_auth_;
}
::oatot::OaAuth* OaActiveBidsSummaryRequest::release_oa_auth() {
  // @@protoc_insertion_point(field_release:oatot.OaActiveBidsSummaryRequest.oa_auth)
  
  ::oatot::OaAuth* temp = oa_auth_;
  oa_auth_ = NULL;
  return temp;
}
void OaActiveBidsSummaryRequest::set_allocated_oa_auth(::oatot::OaAuth* oa_auth) {
  delete oa_auth_;
  oa_auth_ = oa_auth;
  if (oa_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.OaActiveBidsSummaryRequest.oa_auth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaActiveBidsSummaryResponse::kBidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaActiveBidsSummaryResponse::OaActiveBidsSummaryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaActiveBidsSummaryResponse)
}
OaActiveBidsSummaryResponse::OaActiveBidsSummaryResponse(const OaActiveBidsSummaryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bids_(from.bids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oatot.OaActiveBidsSummaryResponse)
}

void OaActiveBidsSummaryResponse::SharedCtor() {
  _cached_size_ = 0;
}

OaActiveBidsSummaryResponse::~OaActiveBidsSummaryResponse() {
  // @@protoc_insertion_point(destructor:oatot.OaActiveBidsSummaryResponse)
  SharedDtor();
}

void OaActiveBidsSummaryResponse::SharedDtor() {
}

void OaActiveBidsSummaryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaActiveBidsSummaryResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaActiveBidsSummaryResponse& OaActiveBidsSummaryResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaActiveBidsSummaryResponse* OaActiveBidsSummaryResponse::New(::google::protobuf::Arena* arena) const {
  OaActiveBidsSummaryResponse* n = new OaActiveBidsSummaryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaActiveBidsSummaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaActiveBidsSummaryResponse)
  bids_.Clear();
}

bool OaActiveBidsSummaryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaActiveBidsSummaryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .oatot.Bid bids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaActiveBidsSummaryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaActiveBidsSummaryResponse)
  return false;
#undef DO_
}

void OaActiveBidsSummaryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaActiveBidsSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Bid bids = 1;
  for (unsigned int i = 0, n = this->bids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaActiveBidsSummaryResponse)
}

::google::protobuf::uint8* OaActiveBidsSummaryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaActiveBidsSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Bid bids = 1;
  for (unsigned int i = 0, n = this->bids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->bids(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaActiveBidsSummaryResponse)
  return target;
}

size_t OaActiveBidsSummaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaActiveBidsSummaryResponse)
  size_t total_size = 0;

  // repeated .oatot.Bid bids = 1;
  {
    unsigned int count = this->bids_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bids(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaActiveBidsSummaryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaActiveBidsSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OaActiveBidsSummaryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaActiveBidsSummaryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaActiveBidsSummaryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaActiveBidsSummaryResponse)
    MergeFrom(*source);
  }
}

void OaActiveBidsSummaryResponse::MergeFrom(const OaActiveBidsSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaActiveBidsSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bids_.MergeFrom(from.bids_);
}

void OaActiveBidsSummaryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaActiveBidsSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaActiveBidsSummaryResponse::CopyFrom(const OaActiveBidsSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaActiveBidsSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaActiveBidsSummaryResponse::IsInitialized() const {
  return true;
}

void OaActiveBidsSummaryResponse::Swap(OaActiveBidsSummaryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaActiveBidsSummaryResponse::InternalSwap(OaActiveBidsSummaryResponse* other) {
  bids_.InternalSwap(&other->bids_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaActiveBidsSummaryResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaActiveBidsSummaryResponse

// repeated .oatot.Bid bids = 1;
int OaActiveBidsSummaryResponse::bids_size() const {
  return bids_.size();
}
void OaActiveBidsSummaryResponse::clear_bids() {
  bids_.Clear();
}
const ::oatot::Bid& OaActiveBidsSummaryResponse::bids(int index) const {
  // @@protoc_insertion_point(field_get:oatot.OaActiveBidsSummaryResponse.bids)
  return bids_.Get(index);
}
::oatot::Bid* OaActiveBidsSummaryResponse::mutable_bids(int index) {
  // @@protoc_insertion_point(field_mutable:oatot.OaActiveBidsSummaryResponse.bids)
  return bids_.Mutable(index);
}
::oatot::Bid* OaActiveBidsSummaryResponse::add_bids() {
  // @@protoc_insertion_point(field_add:oatot.OaActiveBidsSummaryResponse.bids)
  return bids_.Add();
}
::google::protobuf::RepeatedPtrField< ::oatot::Bid >*
OaActiveBidsSummaryResponse::mutable_bids() {
  // @@protoc_insertion_point(field_mutable_list:oatot.OaActiveBidsSummaryResponse.bids)
  return &bids_;
}
const ::google::protobuf::RepeatedPtrField< ::oatot::Bid >&
OaActiveBidsSummaryResponse::bids() const {
  // @@protoc_insertion_point(field_list:oatot.OaActiveBidsSummaryResponse.bids)
  return bids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaMyPastBidsRequest::kOaAuthFieldNumber;
const int OaMyPastBidsRequest::kNextPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaMyPastBidsRequest::OaMyPastBidsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaMyPastBidsRequest)
}
OaMyPastBidsRequest::OaMyPastBidsRequest(const OaMyPastBidsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page().size() > 0) {
    next_page_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_);
  }
  if (from.has_oa_auth()) {
    oa_auth_ = new ::oatot::OaAuth(*from.oa_auth_);
  } else {
    oa_auth_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.OaMyPastBidsRequest)
}

void OaMyPastBidsRequest::SharedCtor() {
  next_page_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oa_auth_ = NULL;
  _cached_size_ = 0;
}

OaMyPastBidsRequest::~OaMyPastBidsRequest() {
  // @@protoc_insertion_point(destructor:oatot.OaMyPastBidsRequest)
  SharedDtor();
}

void OaMyPastBidsRequest::SharedDtor() {
  next_page_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete oa_auth_;
  }
}

void OaMyPastBidsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaMyPastBidsRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaMyPastBidsRequest& OaMyPastBidsRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaMyPastBidsRequest* OaMyPastBidsRequest::New(::google::protobuf::Arena* arena) const {
  OaMyPastBidsRequest* n = new OaMyPastBidsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaMyPastBidsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaMyPastBidsRequest)
  next_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && oa_auth_ != NULL) {
    delete oa_auth_;
  }
  oa_auth_ = NULL;
}

bool OaMyPastBidsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaMyPastBidsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.OaAuth oa_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oa_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page().data(), this->next_page().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.OaMyPastBidsRequest.next_page"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaMyPastBidsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaMyPastBidsRequest)
  return false;
#undef DO_
}

void OaMyPastBidsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaMyPastBidsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->oa_auth_, output);
  }

  // string next_page = 2;
  if (this->next_page().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page().data(), this->next_page().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.OaMyPastBidsRequest.next_page");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaMyPastBidsRequest)
}

::google::protobuf::uint8* OaMyPastBidsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaMyPastBidsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->oa_auth_, deterministic, target);
  }

  // string next_page = 2;
  if (this->next_page().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page().data(), this->next_page().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.OaMyPastBidsRequest.next_page");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaMyPastBidsRequest)
  return target;
}

size_t OaMyPastBidsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaMyPastBidsRequest)
  size_t total_size = 0;

  // string next_page = 2;
  if (this->next_page().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page());
  }

  // .oatot.OaAuth oa_auth = 1;
  if (this->has_oa_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oa_auth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaMyPastBidsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaMyPastBidsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OaMyPastBidsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaMyPastBidsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaMyPastBidsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaMyPastBidsRequest)
    MergeFrom(*source);
  }
}

void OaMyPastBidsRequest::MergeFrom(const OaMyPastBidsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaMyPastBidsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.next_page().size() > 0) {

    next_page_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_);
  }
  if (from.has_oa_auth()) {
    mutable_oa_auth()->::oatot::OaAuth::MergeFrom(from.oa_auth());
  }
}

void OaMyPastBidsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaMyPastBidsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaMyPastBidsRequest::CopyFrom(const OaMyPastBidsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaMyPastBidsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaMyPastBidsRequest::IsInitialized() const {
  return true;
}

void OaMyPastBidsRequest::Swap(OaMyPastBidsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaMyPastBidsRequest::InternalSwap(OaMyPastBidsRequest* other) {
  next_page_.Swap(&other->next_page_);
  std::swap(oa_auth_, other->oa_auth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaMyPastBidsRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaMyPastBidsRequest

// .oatot.OaAuth oa_auth = 1;
bool OaMyPastBidsRequest::has_oa_auth() const {
  return this != internal_default_instance() && oa_auth_ != NULL;
}
void OaMyPastBidsRequest::clear_oa_auth() {
  if (GetArenaNoVirtual() == NULL && oa_auth_ != NULL) delete oa_auth_;
  oa_auth_ = NULL;
}
const ::oatot::OaAuth& OaMyPastBidsRequest::oa_auth() const {
  // @@protoc_insertion_point(field_get:oatot.OaMyPastBidsRequest.oa_auth)
  return oa_auth_ != NULL ? *oa_auth_
                         : *::oatot::OaAuth::internal_default_instance();
}
::oatot::OaAuth* OaMyPastBidsRequest::mutable_oa_auth() {
  
  if (oa_auth_ == NULL) {
    oa_auth_ = new ::oatot::OaAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.OaMyPastBidsRequest.oa_auth)
  return oa_auth_;
}
::oatot::OaAuth* OaMyPastBidsRequest::release_oa_auth() {
  // @@protoc_insertion_point(field_release:oatot.OaMyPastBidsRequest.oa_auth)
  
  ::oatot::OaAuth* temp = oa_auth_;
  oa_auth_ = NULL;
  return temp;
}
void OaMyPastBidsRequest::set_allocated_oa_auth(::oatot::OaAuth* oa_auth) {
  delete oa_auth_;
  oa_auth_ = oa_auth;
  if (oa_auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.OaMyPastBidsRequest.oa_auth)
}

// string next_page = 2;
void OaMyPastBidsRequest::clear_next_page() {
  next_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OaMyPastBidsRequest::next_page() const {
  // @@protoc_insertion_point(field_get:oatot.OaMyPastBidsRequest.next_page)
  return next_page_.GetNoArena();
}
void OaMyPastBidsRequest::set_next_page(const ::std::string& value) {
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.OaMyPastBidsRequest.next_page)
}
#if LANG_CXX11
void OaMyPastBidsRequest::set_next_page(::std::string&& value) {
  
  next_page_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.OaMyPastBidsRequest.next_page)
}
#endif
void OaMyPastBidsRequest::set_next_page(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.OaMyPastBidsRequest.next_page)
}
void OaMyPastBidsRequest::set_next_page(const char* value, size_t size) {
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.OaMyPastBidsRequest.next_page)
}
::std::string* OaMyPastBidsRequest::mutable_next_page() {
  
  // @@protoc_insertion_point(field_mutable:oatot.OaMyPastBidsRequest.next_page)
  return next_page_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OaMyPastBidsRequest::release_next_page() {
  // @@protoc_insertion_point(field_release:oatot.OaMyPastBidsRequest.next_page)
  
  return next_page_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OaMyPastBidsRequest::set_allocated_next_page(::std::string* next_page) {
  if (next_page != NULL) {
    
  } else {
    
  }
  next_page_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page);
  // @@protoc_insertion_point(field_set_allocated:oatot.OaMyPastBidsRequest.next_page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OaMyPastBidsResponse::kBidsFieldNumber;
const int OaMyPastBidsResponse::kNextPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OaMyPastBidsResponse::OaMyPastBidsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.OaMyPastBidsResponse)
}
OaMyPastBidsResponse::OaMyPastBidsResponse(const OaMyPastBidsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bids_(from.bids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page().size() > 0) {
    next_page_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.OaMyPastBidsResponse)
}

void OaMyPastBidsResponse::SharedCtor() {
  next_page_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OaMyPastBidsResponse::~OaMyPastBidsResponse() {
  // @@protoc_insertion_point(destructor:oatot.OaMyPastBidsResponse)
  SharedDtor();
}

void OaMyPastBidsResponse::SharedDtor() {
  next_page_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OaMyPastBidsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OaMyPastBidsResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OaMyPastBidsResponse& OaMyPastBidsResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

OaMyPastBidsResponse* OaMyPastBidsResponse::New(::google::protobuf::Arena* arena) const {
  OaMyPastBidsResponse* n = new OaMyPastBidsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OaMyPastBidsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.OaMyPastBidsResponse)
  bids_.Clear();
  next_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OaMyPastBidsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.OaMyPastBidsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .oatot.Bid bids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page().data(), this->next_page().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.OaMyPastBidsResponse.next_page"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.OaMyPastBidsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.OaMyPastBidsResponse)
  return false;
#undef DO_
}

void OaMyPastBidsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.OaMyPastBidsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Bid bids = 1;
  for (unsigned int i = 0, n = this->bids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bids(i), output);
  }

  // string next_page = 2;
  if (this->next_page().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page().data(), this->next_page().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.OaMyPastBidsResponse.next_page");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.OaMyPastBidsResponse)
}

::google::protobuf::uint8* OaMyPastBidsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.OaMyPastBidsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Bid bids = 1;
  for (unsigned int i = 0, n = this->bids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->bids(i), deterministic, target);
  }

  // string next_page = 2;
  if (this->next_page().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page().data(), this->next_page().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.OaMyPastBidsResponse.next_page");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.OaMyPastBidsResponse)
  return target;
}

size_t OaMyPastBidsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.OaMyPastBidsResponse)
  size_t total_size = 0;

  // repeated .oatot.Bid bids = 1;
  {
    unsigned int count = this->bids_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bids(i));
    }
  }

  // string next_page = 2;
  if (this->next_page().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OaMyPastBidsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.OaMyPastBidsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OaMyPastBidsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OaMyPastBidsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.OaMyPastBidsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.OaMyPastBidsResponse)
    MergeFrom(*source);
  }
}

void OaMyPastBidsResponse::MergeFrom(const OaMyPastBidsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.OaMyPastBidsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bids_.MergeFrom(from.bids_);
  if (from.next_page().size() > 0) {

    next_page_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_);
  }
}

void OaMyPastBidsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.OaMyPastBidsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OaMyPastBidsResponse::CopyFrom(const OaMyPastBidsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.OaMyPastBidsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OaMyPastBidsResponse::IsInitialized() const {
  return true;
}

void OaMyPastBidsResponse::Swap(OaMyPastBidsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OaMyPastBidsResponse::InternalSwap(OaMyPastBidsResponse* other) {
  bids_.InternalSwap(&other->bids_);
  next_page_.Swap(&other->next_page_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OaMyPastBidsResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OaMyPastBidsResponse

// repeated .oatot.Bid bids = 1;
int OaMyPastBidsResponse::bids_size() const {
  return bids_.size();
}
void OaMyPastBidsResponse::clear_bids() {
  bids_.Clear();
}
const ::oatot::Bid& OaMyPastBidsResponse::bids(int index) const {
  // @@protoc_insertion_point(field_get:oatot.OaMyPastBidsResponse.bids)
  return bids_.Get(index);
}
::oatot::Bid* OaMyPastBidsResponse::mutable_bids(int index) {
  // @@protoc_insertion_point(field_mutable:oatot.OaMyPastBidsResponse.bids)
  return bids_.Mutable(index);
}
::oatot::Bid* OaMyPastBidsResponse::add_bids() {
  // @@protoc_insertion_point(field_add:oatot.OaMyPastBidsResponse.bids)
  return bids_.Add();
}
::google::protobuf::RepeatedPtrField< ::oatot::Bid >*
OaMyPastBidsResponse::mutable_bids() {
  // @@protoc_insertion_point(field_mutable_list:oatot.OaMyPastBidsResponse.bids)
  return &bids_;
}
const ::google::protobuf::RepeatedPtrField< ::oatot::Bid >&
OaMyPastBidsResponse::bids() const {
  // @@protoc_insertion_point(field_list:oatot.OaMyPastBidsResponse.bids)
  return bids_;
}

// string next_page = 2;
void OaMyPastBidsResponse::clear_next_page() {
  next_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OaMyPastBidsResponse::next_page() const {
  // @@protoc_insertion_point(field_get:oatot.OaMyPastBidsResponse.next_page)
  return next_page_.GetNoArena();
}
void OaMyPastBidsResponse::set_next_page(const ::std::string& value) {
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.OaMyPastBidsResponse.next_page)
}
#if LANG_CXX11
void OaMyPastBidsResponse::set_next_page(::std::string&& value) {
  
  next_page_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.OaMyPastBidsResponse.next_page)
}
#endif
void OaMyPastBidsResponse::set_next_page(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.OaMyPastBidsResponse.next_page)
}
void OaMyPastBidsResponse::set_next_page(const char* value, size_t size) {
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.OaMyPastBidsResponse.next_page)
}
::std::string* OaMyPastBidsResponse::mutable_next_page() {
  
  // @@protoc_insertion_point(field_mutable:oatot.OaMyPastBidsResponse.next_page)
  return next_page_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OaMyPastBidsResponse::release_next_page() {
  // @@protoc_insertion_point(field_release:oatot.OaMyPastBidsResponse.next_page)
  
  return next_page_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OaMyPastBidsResponse::set_allocated_next_page(::std::string* next_page) {
  if (next_page != NULL) {
    
  } else {
    
  }
  next_page_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page);
  // @@protoc_insertion_point(field_set_allocated:oatot.OaMyPastBidsResponse.next_page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatesRequest::kOaAuthFieldNumber;
const int UpdatesRequest::kSiteAuthFieldNumber;
const int UpdatesRequest::kNextPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatesRequest::UpdatesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.UpdatesRequest)
}
UpdatesRequest::UpdatesRequest(const UpdatesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page().size() > 0) {
    next_page_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_);
  }
  clear_has_auth();
  switch (from.auth_case()) {
    case kOaAuth: {
      mutable_oa_auth()->::oatot::OaAuth::MergeFrom(from.oa_auth());
      break;
    }
    case kSiteAuth: {
      mutable_site_auth()->::oatot::SiteAuth::MergeFrom(from.site_auth());
      break;
    }
    case AUTH_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:oatot.UpdatesRequest)
}

void UpdatesRequest::SharedCtor() {
  next_page_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_auth();
  _cached_size_ = 0;
}

UpdatesRequest::~UpdatesRequest() {
  // @@protoc_insertion_point(destructor:oatot.UpdatesRequest)
  SharedDtor();
}

void UpdatesRequest::SharedDtor() {
  next_page_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_auth()) {
    clear_auth();
  }
}

void UpdatesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatesRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatesRequest& UpdatesRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatesRequest* UpdatesRequest::New(::google::protobuf::Arena* arena) const {
  UpdatesRequest* n = new UpdatesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatesRequest::clear_auth() {
// @@protoc_insertion_point(one_of_clear_start:oatot.UpdatesRequest)
  switch (auth_case()) {
    case kOaAuth: {
      delete auth_.oa_auth_;
      break;
    }
    case kSiteAuth: {
      delete auth_.site_auth_;
      break;
    }
    case AUTH_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = AUTH_NOT_SET;
}


void UpdatesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.UpdatesRequest)
  next_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_auth();
}

bool UpdatesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.UpdatesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.OaAuth oa_auth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oa_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .oatot.SiteAuth site_auth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_site_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page().data(), this->next_page().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.UpdatesRequest.next_page"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.UpdatesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.UpdatesRequest)
  return false;
#undef DO_
}

void UpdatesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.UpdatesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (has_oa_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *auth_.oa_auth_, output);
  }

  // .oatot.SiteAuth site_auth = 2;
  if (has_site_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *auth_.site_auth_, output);
  }

  // string next_page = 3;
  if (this->next_page().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page().data(), this->next_page().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.UpdatesRequest.next_page");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->next_page(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.UpdatesRequest)
}

::google::protobuf::uint8* UpdatesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.UpdatesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.OaAuth oa_auth = 1;
  if (has_oa_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *auth_.oa_auth_, deterministic, target);
  }

  // .oatot.SiteAuth site_auth = 2;
  if (has_site_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *auth_.site_auth_, deterministic, target);
  }

  // string next_page = 3;
  if (this->next_page().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page().data(), this->next_page().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.UpdatesRequest.next_page");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->next_page(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.UpdatesRequest)
  return target;
}

size_t UpdatesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.UpdatesRequest)
  size_t total_size = 0;

  // string next_page = 3;
  if (this->next_page().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page());
  }

  switch (auth_case()) {
    // .oatot.OaAuth oa_auth = 1;
    case kOaAuth: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *auth_.oa_auth_);
      break;
    }
    // .oatot.SiteAuth site_auth = 2;
    case kSiteAuth: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *auth_.site_auth_);
      break;
    }
    case AUTH_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.UpdatesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.UpdatesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.UpdatesRequest)
    MergeFrom(*source);
  }
}

void UpdatesRequest::MergeFrom(const UpdatesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.UpdatesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.next_page().size() > 0) {

    next_page_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_);
  }
  switch (from.auth_case()) {
    case kOaAuth: {
      mutable_oa_auth()->::oatot::OaAuth::MergeFrom(from.oa_auth());
      break;
    }
    case kSiteAuth: {
      mutable_site_auth()->::oatot::SiteAuth::MergeFrom(from.site_auth());
      break;
    }
    case AUTH_NOT_SET: {
      break;
    }
  }
}

void UpdatesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.UpdatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatesRequest::CopyFrom(const UpdatesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.UpdatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatesRequest::IsInitialized() const {
  return true;
}

void UpdatesRequest::Swap(UpdatesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatesRequest::InternalSwap(UpdatesRequest* other) {
  next_page_.Swap(&other->next_page_);
  std::swap(auth_, other->auth_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatesRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatesRequest

// .oatot.OaAuth oa_auth = 1;
bool UpdatesRequest::has_oa_auth() const {
  return auth_case() == kOaAuth;
}
void UpdatesRequest::set_has_oa_auth() {
  _oneof_case_[0] = kOaAuth;
}
void UpdatesRequest::clear_oa_auth() {
  if (has_oa_auth()) {
    delete auth_.oa_auth_;
    clear_has_auth();
  }
}
 const ::oatot::OaAuth& UpdatesRequest::oa_auth() const {
  // @@protoc_insertion_point(field_get:oatot.UpdatesRequest.oa_auth)
  return has_oa_auth()
      ? *auth_.oa_auth_
      : ::oatot::OaAuth::default_instance();
}
::oatot::OaAuth* UpdatesRequest::mutable_oa_auth() {
  if (!has_oa_auth()) {
    clear_auth();
    set_has_oa_auth();
    auth_.oa_auth_ = new ::oatot::OaAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.UpdatesRequest.oa_auth)
  return auth_.oa_auth_;
}
::oatot::OaAuth* UpdatesRequest::release_oa_auth() {
  // @@protoc_insertion_point(field_release:oatot.UpdatesRequest.oa_auth)
  if (has_oa_auth()) {
    clear_has_auth();
    ::oatot::OaAuth* temp = auth_.oa_auth_;
    auth_.oa_auth_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void UpdatesRequest::set_allocated_oa_auth(::oatot::OaAuth* oa_auth) {
  clear_auth();
  if (oa_auth) {
    set_has_oa_auth();
    auth_.oa_auth_ = oa_auth;
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.UpdatesRequest.oa_auth)
}

// .oatot.SiteAuth site_auth = 2;
bool UpdatesRequest::has_site_auth() const {
  return auth_case() == kSiteAuth;
}
void UpdatesRequest::set_has_site_auth() {
  _oneof_case_[0] = kSiteAuth;
}
void UpdatesRequest::clear_site_auth() {
  if (has_site_auth()) {
    delete auth_.site_auth_;
    clear_has_auth();
  }
}
 const ::oatot::SiteAuth& UpdatesRequest::site_auth() const {
  // @@protoc_insertion_point(field_get:oatot.UpdatesRequest.site_auth)
  return has_site_auth()
      ? *auth_.site_auth_
      : ::oatot::SiteAuth::default_instance();
}
::oatot::SiteAuth* UpdatesRequest::mutable_site_auth() {
  if (!has_site_auth()) {
    clear_auth();
    set_has_site_auth();
    auth_.site_auth_ = new ::oatot::SiteAuth;
  }
  // @@protoc_insertion_point(field_mutable:oatot.UpdatesRequest.site_auth)
  return auth_.site_auth_;
}
::oatot::SiteAuth* UpdatesRequest::release_site_auth() {
  // @@protoc_insertion_point(field_release:oatot.UpdatesRequest.site_auth)
  if (has_site_auth()) {
    clear_has_auth();
    ::oatot::SiteAuth* temp = auth_.site_auth_;
    auth_.site_auth_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void UpdatesRequest::set_allocated_site_auth(::oatot::SiteAuth* site_auth) {
  clear_auth();
  if (site_auth) {
    set_has_site_auth();
    auth_.site_auth_ = site_auth;
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.UpdatesRequest.site_auth)
}

// string next_page = 3;
void UpdatesRequest::clear_next_page() {
  next_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdatesRequest::next_page() const {
  // @@protoc_insertion_point(field_get:oatot.UpdatesRequest.next_page)
  return next_page_.GetNoArena();
}
void UpdatesRequest::set_next_page(const ::std::string& value) {
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.UpdatesRequest.next_page)
}
#if LANG_CXX11
void UpdatesRequest::set_next_page(::std::string&& value) {
  
  next_page_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.UpdatesRequest.next_page)
}
#endif
void UpdatesRequest::set_next_page(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.UpdatesRequest.next_page)
}
void UpdatesRequest::set_next_page(const char* value, size_t size) {
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.UpdatesRequest.next_page)
}
::std::string* UpdatesRequest::mutable_next_page() {
  
  // @@protoc_insertion_point(field_mutable:oatot.UpdatesRequest.next_page)
  return next_page_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdatesRequest::release_next_page() {
  // @@protoc_insertion_point(field_release:oatot.UpdatesRequest.next_page)
  
  return next_page_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdatesRequest::set_allocated_next_page(::std::string* next_page) {
  if (next_page != NULL) {
    
  } else {
    
  }
  next_page_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page);
  // @@protoc_insertion_point(field_set_allocated:oatot.UpdatesRequest.next_page)
}

bool UpdatesRequest::has_auth() const {
  return auth_case() != AUTH_NOT_SET;
}
void UpdatesRequest::clear_has_auth() {
  _oneof_case_[0] = AUTH_NOT_SET;
}
UpdatesRequest::AuthCase UpdatesRequest::auth_case() const {
  return UpdatesRequest::AuthCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BidClosedEvent::kBidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BidClosedEvent::BidClosedEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.BidClosedEvent)
}
BidClosedEvent::BidClosedEvent(const BidClosedEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bid()) {
    bid_ = new ::oatot::Bid(*from.bid_);
  } else {
    bid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:oatot.BidClosedEvent)
}

void BidClosedEvent::SharedCtor() {
  bid_ = NULL;
  _cached_size_ = 0;
}

BidClosedEvent::~BidClosedEvent() {
  // @@protoc_insertion_point(destructor:oatot.BidClosedEvent)
  SharedDtor();
}

void BidClosedEvent::SharedDtor() {
  if (this != internal_default_instance()) {
    delete bid_;
  }
}

void BidClosedEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidClosedEvent::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BidClosedEvent& BidClosedEvent::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

BidClosedEvent* BidClosedEvent::New(::google::protobuf::Arena* arena) const {
  BidClosedEvent* n = new BidClosedEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BidClosedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.BidClosedEvent)
  if (GetArenaNoVirtual() == NULL && bid_ != NULL) {
    delete bid_;
  }
  bid_ = NULL;
}

bool BidClosedEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.BidClosedEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.Bid bid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.BidClosedEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.BidClosedEvent)
  return false;
#undef DO_
}

void BidClosedEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.BidClosedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.Bid bid = 1;
  if (this->has_bid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bid_, output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.BidClosedEvent)
}

::google::protobuf::uint8* BidClosedEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.BidClosedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.Bid bid = 1;
  if (this->has_bid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->bid_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.BidClosedEvent)
  return target;
}

size_t BidClosedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.BidClosedEvent)
  size_t total_size = 0;

  // .oatot.Bid bid = 1;
  if (this->has_bid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidClosedEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.BidClosedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const BidClosedEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BidClosedEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.BidClosedEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.BidClosedEvent)
    MergeFrom(*source);
  }
}

void BidClosedEvent::MergeFrom(const BidClosedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.BidClosedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bid()) {
    mutable_bid()->::oatot::Bid::MergeFrom(from.bid());
  }
}

void BidClosedEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.BidClosedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidClosedEvent::CopyFrom(const BidClosedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.BidClosedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidClosedEvent::IsInitialized() const {
  return true;
}

void BidClosedEvent::Swap(BidClosedEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BidClosedEvent::InternalSwap(BidClosedEvent* other) {
  std::swap(bid_, other->bid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BidClosedEvent::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BidClosedEvent

// .oatot.Bid bid = 1;
bool BidClosedEvent::has_bid() const {
  return this != internal_default_instance() && bid_ != NULL;
}
void BidClosedEvent::clear_bid() {
  if (GetArenaNoVirtual() == NULL && bid_ != NULL) delete bid_;
  bid_ = NULL;
}
const ::oatot::Bid& BidClosedEvent::bid() const {
  // @@protoc_insertion_point(field_get:oatot.BidClosedEvent.bid)
  return bid_ != NULL ? *bid_
                         : *::oatot::Bid::internal_default_instance();
}
::oatot::Bid* BidClosedEvent::mutable_bid() {
  
  if (bid_ == NULL) {
    bid_ = new ::oatot::Bid;
  }
  // @@protoc_insertion_point(field_mutable:oatot.BidClosedEvent.bid)
  return bid_;
}
::oatot::Bid* BidClosedEvent::release_bid() {
  // @@protoc_insertion_point(field_release:oatot.BidClosedEvent.bid)
  
  ::oatot::Bid* temp = bid_;
  bid_ = NULL;
  return temp;
}
void BidClosedEvent::set_allocated_bid(::oatot::Bid* bid) {
  delete bid_;
  bid_ = bid;
  if (bid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.BidClosedEvent.bid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SummaryEvent::kNewSummaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SummaryEvent::SummaryEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.SummaryEvent)
}
SummaryEvent::SummaryEvent(const SummaryEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      new_summary_(from.new_summary_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:oatot.SummaryEvent)
}

void SummaryEvent::SharedCtor() {
  _cached_size_ = 0;
}

SummaryEvent::~SummaryEvent() {
  // @@protoc_insertion_point(destructor:oatot.SummaryEvent)
  SharedDtor();
}

void SummaryEvent::SharedDtor() {
}

void SummaryEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SummaryEvent::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SummaryEvent& SummaryEvent::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

SummaryEvent* SummaryEvent::New(::google::protobuf::Arena* arena) const {
  SummaryEvent* n = new SummaryEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SummaryEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.SummaryEvent)
  new_summary_.Clear();
}

bool SummaryEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.SummaryEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .oatot.Bid new_summary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_new_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.SummaryEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.SummaryEvent)
  return false;
#undef DO_
}

void SummaryEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.SummaryEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Bid new_summary = 1;
  for (unsigned int i = 0, n = this->new_summary_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->new_summary(i), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.SummaryEvent)
}

::google::protobuf::uint8* SummaryEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.SummaryEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Bid new_summary = 1;
  for (unsigned int i = 0, n = this->new_summary_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->new_summary(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.SummaryEvent)
  return target;
}

size_t SummaryEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.SummaryEvent)
  size_t total_size = 0;

  // repeated .oatot.Bid new_summary = 1;
  {
    unsigned int count = this->new_summary_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->new_summary(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SummaryEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.SummaryEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const SummaryEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SummaryEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.SummaryEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.SummaryEvent)
    MergeFrom(*source);
  }
}

void SummaryEvent::MergeFrom(const SummaryEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.SummaryEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  new_summary_.MergeFrom(from.new_summary_);
}

void SummaryEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.SummaryEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SummaryEvent::CopyFrom(const SummaryEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.SummaryEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryEvent::IsInitialized() const {
  return true;
}

void SummaryEvent::Swap(SummaryEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SummaryEvent::InternalSwap(SummaryEvent* other) {
  new_summary_.InternalSwap(&other->new_summary_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SummaryEvent::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SummaryEvent

// repeated .oatot.Bid new_summary = 1;
int SummaryEvent::new_summary_size() const {
  return new_summary_.size();
}
void SummaryEvent::clear_new_summary() {
  new_summary_.Clear();
}
const ::oatot::Bid& SummaryEvent::new_summary(int index) const {
  // @@protoc_insertion_point(field_get:oatot.SummaryEvent.new_summary)
  return new_summary_.Get(index);
}
::oatot::Bid* SummaryEvent::mutable_new_summary(int index) {
  // @@protoc_insertion_point(field_mutable:oatot.SummaryEvent.new_summary)
  return new_summary_.Mutable(index);
}
::oatot::Bid* SummaryEvent::add_new_summary() {
  // @@protoc_insertion_point(field_add:oatot.SummaryEvent.new_summary)
  return new_summary_.Add();
}
::google::protobuf::RepeatedPtrField< ::oatot::Bid >*
SummaryEvent::mutable_new_summary() {
  // @@protoc_insertion_point(field_mutable_list:oatot.SummaryEvent.new_summary)
  return &new_summary_;
}
const ::google::protobuf::RepeatedPtrField< ::oatot::Bid >&
SummaryEvent::new_summary() const {
  // @@protoc_insertion_point(field_list:oatot.SummaryEvent.new_summary)
  return new_summary_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kBidClosedEventFieldNumber;
const int Event::kSummaryEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_event();
  switch (from.event_case()) {
    case kBidClosedEvent: {
      mutable_bid_closed_event()->::oatot::BidClosedEvent::MergeFrom(from.bid_closed_event());
      break;
    }
    case kSummaryEvent: {
      mutable_summary_event()->::oatot::SummaryEvent::MergeFrom(from.summary_event());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:oatot.Event)
}

void Event::SharedCtor() {
  clear_has_event();
  _cached_size_ = 0;
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:oatot.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  if (has_event()) {
    clear_event();
  }
}

void Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

Event* Event::New(::google::protobuf::Arena* arena) const {
  Event* n = new Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Event::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:oatot.Event)
  switch (event_case()) {
    case kBidClosedEvent: {
      delete event_.bid_closed_event_;
      break;
    }
    case kSummaryEvent: {
      delete event_.summary_event_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.Event)
  clear_event();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .oatot.BidClosedEvent bid_closed_event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bid_closed_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .oatot.SummaryEvent summary_event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_summary_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.BidClosedEvent bid_closed_event = 1;
  if (has_bid_closed_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *event_.bid_closed_event_, output);
  }

  // .oatot.SummaryEvent summary_event = 2;
  if (has_summary_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *event_.summary_event_, output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .oatot.BidClosedEvent bid_closed_event = 1;
  if (has_bid_closed_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *event_.bid_closed_event_, deterministic, target);
  }

  // .oatot.SummaryEvent summary_event = 2;
  if (has_summary_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *event_.summary_event_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.Event)
  size_t total_size = 0;

  switch (event_case()) {
    // .oatot.BidClosedEvent bid_closed_event = 1;
    case kBidClosedEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.bid_closed_event_);
      break;
    }
    // .oatot.SummaryEvent summary_event = 2;
    case kSummaryEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *event_.summary_event_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.event_case()) {
    case kBidClosedEvent: {
      mutable_bid_closed_event()->::oatot::BidClosedEvent::MergeFrom(from.bid_closed_event());
      break;
    }
    case kSummaryEvent: {
      mutable_summary_event()->::oatot::SummaryEvent::MergeFrom(from.summary_event());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  std::swap(event_, other->event_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Event

// .oatot.BidClosedEvent bid_closed_event = 1;
bool Event::has_bid_closed_event() const {
  return event_case() == kBidClosedEvent;
}
void Event::set_has_bid_closed_event() {
  _oneof_case_[0] = kBidClosedEvent;
}
void Event::clear_bid_closed_event() {
  if (has_bid_closed_event()) {
    delete event_.bid_closed_event_;
    clear_has_event();
  }
}
 const ::oatot::BidClosedEvent& Event::bid_closed_event() const {
  // @@protoc_insertion_point(field_get:oatot.Event.bid_closed_event)
  return has_bid_closed_event()
      ? *event_.bid_closed_event_
      : ::oatot::BidClosedEvent::default_instance();
}
::oatot::BidClosedEvent* Event::mutable_bid_closed_event() {
  if (!has_bid_closed_event()) {
    clear_event();
    set_has_bid_closed_event();
    event_.bid_closed_event_ = new ::oatot::BidClosedEvent;
  }
  // @@protoc_insertion_point(field_mutable:oatot.Event.bid_closed_event)
  return event_.bid_closed_event_;
}
::oatot::BidClosedEvent* Event::release_bid_closed_event() {
  // @@protoc_insertion_point(field_release:oatot.Event.bid_closed_event)
  if (has_bid_closed_event()) {
    clear_has_event();
    ::oatot::BidClosedEvent* temp = event_.bid_closed_event_;
    event_.bid_closed_event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Event::set_allocated_bid_closed_event(::oatot::BidClosedEvent* bid_closed_event) {
  clear_event();
  if (bid_closed_event) {
    set_has_bid_closed_event();
    event_.bid_closed_event_ = bid_closed_event;
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.Event.bid_closed_event)
}

// .oatot.SummaryEvent summary_event = 2;
bool Event::has_summary_event() const {
  return event_case() == kSummaryEvent;
}
void Event::set_has_summary_event() {
  _oneof_case_[0] = kSummaryEvent;
}
void Event::clear_summary_event() {
  if (has_summary_event()) {
    delete event_.summary_event_;
    clear_has_event();
  }
}
 const ::oatot::SummaryEvent& Event::summary_event() const {
  // @@protoc_insertion_point(field_get:oatot.Event.summary_event)
  return has_summary_event()
      ? *event_.summary_event_
      : ::oatot::SummaryEvent::default_instance();
}
::oatot::SummaryEvent* Event::mutable_summary_event() {
  if (!has_summary_event()) {
    clear_event();
    set_has_summary_event();
    event_.summary_event_ = new ::oatot::SummaryEvent;
  }
  // @@protoc_insertion_point(field_mutable:oatot.Event.summary_event)
  return event_.summary_event_;
}
::oatot::SummaryEvent* Event::release_summary_event() {
  // @@protoc_insertion_point(field_release:oatot.Event.summary_event)
  if (has_summary_event()) {
    clear_has_event();
    ::oatot::SummaryEvent* temp = event_.summary_event_;
    event_.summary_event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Event::set_allocated_summary_event(::oatot::SummaryEvent* summary_event) {
  clear_event();
  if (summary_event) {
    set_has_summary_event();
    event_.summary_event_ = summary_event;
  }
  // @@protoc_insertion_point(field_set_allocated:oatot.Event.summary_event)
}

bool Event::has_event() const {
  return event_case() != EVENT_NOT_SET;
}
void Event::clear_has_event() {
  _oneof_case_[0] = EVENT_NOT_SET;
}
Event::EventCase Event::event_case() const {
  return Event::EventCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatesResponse::kEventsFieldNumber;
const int UpdatesResponse::kNextPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatesResponse::UpdatesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:oatot.UpdatesResponse)
}
UpdatesResponse::UpdatesResponse(const UpdatesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      events_(from.events_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_page().size() > 0) {
    next_page_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_);
  }
  // @@protoc_insertion_point(copy_constructor:oatot.UpdatesResponse)
}

void UpdatesResponse::SharedCtor() {
  next_page_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UpdatesResponse::~UpdatesResponse() {
  // @@protoc_insertion_point(destructor:oatot.UpdatesResponse)
  SharedDtor();
}

void UpdatesResponse::SharedDtor() {
  next_page_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdatesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatesResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatesResponse& UpdatesResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatesResponse* UpdatesResponse::New(::google::protobuf::Arena* arena) const {
  UpdatesResponse* n = new UpdatesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:oatot.UpdatesResponse)
  events_.Clear();
  next_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UpdatesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oatot.UpdatesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .oatot.Event events = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_page = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_page()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_page().data(), this->next_page().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oatot.UpdatesResponse.next_page"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oatot.UpdatesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oatot.UpdatesResponse)
  return false;
#undef DO_
}

void UpdatesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oatot.UpdatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Event events = 1;
  for (unsigned int i = 0, n = this->events_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->events(i), output);
  }

  // string next_page = 2;
  if (this->next_page().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page().data(), this->next_page().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.UpdatesResponse.next_page");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_page(), output);
  }

  // @@protoc_insertion_point(serialize_end:oatot.UpdatesResponse)
}

::google::protobuf::uint8* UpdatesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:oatot.UpdatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .oatot.Event events = 1;
  for (unsigned int i = 0, n = this->events_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->events(i), deterministic, target);
  }

  // string next_page = 2;
  if (this->next_page().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_page().data(), this->next_page().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oatot.UpdatesResponse.next_page");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_page(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oatot.UpdatesResponse)
  return target;
}

size_t UpdatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oatot.UpdatesResponse)
  size_t total_size = 0;

  // repeated .oatot.Event events = 1;
  {
    unsigned int count = this->events_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->events(i));
    }
  }

  // string next_page = 2;
  if (this->next_page().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_page());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oatot.UpdatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oatot.UpdatesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oatot.UpdatesResponse)
    MergeFrom(*source);
  }
}

void UpdatesResponse::MergeFrom(const UpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oatot.UpdatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  if (from.next_page().size() > 0) {

    next_page_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_page_);
  }
}

void UpdatesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oatot.UpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatesResponse::CopyFrom(const UpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oatot.UpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatesResponse::IsInitialized() const {
  return true;
}

void UpdatesResponse::Swap(UpdatesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatesResponse::InternalSwap(UpdatesResponse* other) {
  events_.InternalSwap(&other->events_);
  next_page_.Swap(&other->next_page_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatesResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatesResponse

// repeated .oatot.Event events = 1;
int UpdatesResponse::events_size() const {
  return events_.size();
}
void UpdatesResponse::clear_events() {
  events_.Clear();
}
const ::oatot::Event& UpdatesResponse::events(int index) const {
  // @@protoc_insertion_point(field_get:oatot.UpdatesResponse.events)
  return events_.Get(index);
}
::oatot::Event* UpdatesResponse::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:oatot.UpdatesResponse.events)
  return events_.Mutable(index);
}
::oatot::Event* UpdatesResponse::add_events() {
  // @@protoc_insertion_point(field_add:oatot.UpdatesResponse.events)
  return events_.Add();
}
::google::protobuf::RepeatedPtrField< ::oatot::Event >*
UpdatesResponse::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:oatot.UpdatesResponse.events)
  return &events_;
}
const ::google::protobuf::RepeatedPtrField< ::oatot::Event >&
UpdatesResponse::events() const {
  // @@protoc_insertion_point(field_list:oatot.UpdatesResponse.events)
  return events_;
}

// string next_page = 2;
void UpdatesResponse::clear_next_page() {
  next_page_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdatesResponse::next_page() const {
  // @@protoc_insertion_point(field_get:oatot.UpdatesResponse.next_page)
  return next_page_.GetNoArena();
}
void UpdatesResponse::set_next_page(const ::std::string& value) {
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oatot.UpdatesResponse.next_page)
}
#if LANG_CXX11
void UpdatesResponse::set_next_page(::std::string&& value) {
  
  next_page_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oatot.UpdatesResponse.next_page)
}
#endif
void UpdatesResponse::set_next_page(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oatot.UpdatesResponse.next_page)
}
void UpdatesResponse::set_next_page(const char* value, size_t size) {
  
  next_page_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oatot.UpdatesResponse.next_page)
}
::std::string* UpdatesResponse::mutable_next_page() {
  
  // @@protoc_insertion_point(field_mutable:oatot.UpdatesResponse.next_page)
  return next_page_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdatesResponse::release_next_page() {
  // @@protoc_insertion_point(field_release:oatot.UpdatesResponse.next_page)
  
  return next_page_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdatesResponse::set_allocated_next_page(::std::string* next_page) {
  if (next_page != NULL) {
    
  } else {
    
  }
  next_page_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page);
  // @@protoc_insertion_point(field_set_allocated:oatot.UpdatesResponse.next_page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace oatot

// @@protoc_insertion_point(global_scope)
